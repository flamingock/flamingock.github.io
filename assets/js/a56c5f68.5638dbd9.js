"use strict";(self.webpackChunkflamingock=self.webpackChunkflamingock||[]).push([[67],{1470:(e,n,t)=>{t.d(n,{A:()=>w});var r=t(6540),i=t(4164),s=t(3104),o=t(6347),d=t(205),c=t(7485),a=t(1682),l=t(679);function u(e){return r.Children.toArray(e).filter(e=>"\n"!==e).map(e=>{if(!e||(0,r.isValidElement)(e)&&function(e){const{props:n}=e;return!!n&&"object"==typeof n&&"value"in n}(e))return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)})?.filter(Boolean)??[]}function h(e){const{values:n,children:t}=e;return(0,r.useMemo)(()=>{const e=n??function(e){return u(e).map(({props:{value:e,label:n,attributes:t,default:r}})=>({value:e,label:n,attributes:t,default:r}))}(t);return function(e){const n=(0,a.XI)(e,(e,n)=>e.value===n.value);if(n.length>0)throw new Error(`Docusaurus error: Duplicate values "${n.map(e=>e.value).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e},[n,t])}function x({value:e,tabValues:n}){return n.some(n=>n.value===e)}function m({queryString:e=!1,groupId:n}){const t=(0,o.W6)(),i=function({queryString:e=!1,groupId:n}){if("string"==typeof e)return e;if(!1===e)return null;if(!0===e&&!n)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return n??null}({queryString:e,groupId:n});return[(0,c.aZ)(i),(0,r.useCallback)(e=>{if(!i)return;const n=new URLSearchParams(t.location.search);n.set(i,e),t.replace({...t.location,search:n.toString()})},[i,t])]}function g(e){const{defaultValue:n,queryString:t=!1,groupId:i}=e,s=h(e),[o,c]=(0,r.useState)(()=>function({defaultValue:e,tabValues:n}){if(0===n.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(e){if(!x({value:e,tabValues:n}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${e}" but none of its children has the corresponding value. Available values are: ${n.map(e=>e.value).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return e}const t=n.find(e=>e.default)??n[0];if(!t)throw new Error("Unexpected error: 0 tabValues");return t.value}({defaultValue:n,tabValues:s})),[a,u]=m({queryString:t,groupId:i}),[g,p]=function({groupId:e}){const n=function(e){return e?`docusaurus.tab.${e}`:null}(e),[t,i]=(0,l.Dv)(n);return[t,(0,r.useCallback)(e=>{n&&i.set(e)},[n,i])]}({groupId:i}),j=(()=>{const e=a??g;return x({value:e,tabValues:s})?e:null})();(0,d.A)(()=>{j&&c(j)},[j]);return{selectedValue:o,selectValue:(0,r.useCallback)(e=>{if(!x({value:e,tabValues:s}))throw new Error(`Can't select invalid tab value=${e}`);c(e),u(e),p(e)},[u,p,s]),tabValues:s}}var p=t(2303);const j={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};var b=t(4848);function f({className:e,block:n,selectedValue:t,selectValue:r,tabValues:o}){const d=[],{blockElementScrollPositionUntilNextRender:c}=(0,s.a_)(),a=e=>{const n=e.currentTarget,i=d.indexOf(n),s=o[i].value;s!==t&&(c(n),r(s))},l=e=>{let n=null;switch(e.key){case"Enter":a(e);break;case"ArrowRight":{const t=d.indexOf(e.currentTarget)+1;n=d[t]??d[0];break}case"ArrowLeft":{const t=d.indexOf(e.currentTarget)-1;n=d[t]??d[d.length-1];break}}n?.focus()};return(0,b.jsx)("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,i.A)("tabs",{"tabs--block":n},e),children:o.map(({value:e,label:n,attributes:r})=>(0,b.jsx)("li",{role:"tab",tabIndex:t===e?0:-1,"aria-selected":t===e,ref:e=>{d.push(e)},onKeyDown:l,onClick:a,...r,className:(0,i.A)("tabs__item",j.tabItem,r?.className,{"tabs__item--active":t===e}),children:n??e},e))})}function v({lazy:e,children:n,selectedValue:t}){const s=(Array.isArray(n)?n:[n]).filter(Boolean);if(e){const e=s.find(e=>e.props.value===t);return e?(0,r.cloneElement)(e,{className:(0,i.A)("margin-top--md",e.props.className)}):null}return(0,b.jsx)("div",{className:"margin-top--md",children:s.map((e,n)=>(0,r.cloneElement)(e,{key:n,hidden:e.props.value!==t}))})}function y(e){const n=g(e);return(0,b.jsxs)("div",{className:(0,i.A)("tabs-container",j.tabList),children:[(0,b.jsx)(f,{...n,...e}),(0,b.jsx)(v,{...n,...e})]})}function w(e){const n=(0,p.A)();return(0,b.jsx)(y,{...e,children:u(e.children)},String(n))}},2456:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>a,default:()=>x,frontMatter:()=>c,metadata:()=>r,toc:()=>u});const r=JSON.parse('{"id":"audit-stores/community/mongodb-audit-store","title":"MongoDB","description":"This page explains how to configure MongoDB as Flamingock\'s audit store.","source":"@site/docs/audit-stores/community/mongodb-audit-store.md","sourceDirName":"audit-stores/community","slug":"/audit-stores/community/mongodb-audit-store","permalink":"/docs/audit-stores/community/mongodb-audit-store","draft":false,"unlisted":false,"editUrl":"https://github.com/flamingock/flamingock-java/docs/audit-stores/community/mongodb-audit-store.md","tags":[],"version":"current","sidebarPosition":2,"frontMatter":{"title":"MongoDB","sidebar_position":2},"sidebar":"tutorialSidebar","previous":{"title":"Introduction","permalink":"/docs/audit-stores/introduction"},"next":{"title":"MongoDB Spring Data","permalink":"/docs/audit-stores/community/mongodb-springdata-audit-store"}}');var i=t(4848),s=t(8453),o=t(1470),d=t(9365);const c={title:"MongoDB",sidebar_position:2},a="MongoDB Audit Store",l={},u=[{value:"Minimum setup",id:"minimum-setup",level:2},{value:"Dependencies",id:"dependencies",level:2},{value:"Required dependencies",id:"required-dependencies",level:3},{value:"Optional configurations",id:"optional-configurations",level:3},{value:"Reusing target system dependencies",id:"reusing-target-system-dependencies",level:2},{value:"Supported versions",id:"supported-versions",level:2},{value:"Dependencies",id:"dependencies-1",level:2},{value:"Configuration options",id:"configuration-options",level:2},{value:"Next steps",id:"next-steps",level:2}];function h(e){const n={a:"a",blockquote:"blockquote",br:"br",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,s.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.header,{children:(0,i.jsx)(n.h1,{id:"mongodb-audit-store",children:"MongoDB Audit Store"})}),"\n",(0,i.jsxs)(n.p,{children:["This page explains how to configure ",(0,i.jsx)(n.strong,{children:"MongoDB"})," as Flamingock's audit store.\nThe audit store is where Flamingock records execution history and ensures safe coordination across distributed deployments."]}),"\n",(0,i.jsxs)(n.blockquote,{children:["\n",(0,i.jsxs)(n.p,{children:["For a conceptual explanation of the audit store vs target systems, see ",(0,i.jsx)(n.a,{href:"/docs/overview/audit-store-vs-target-system",children:"Audit store vs target system"}),"."]}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"minimum-setup",children:"Minimum setup"}),"\n",(0,i.jsx)(n.p,{children:"To use MongoDB as your audit store you need to provide:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["A ",(0,i.jsx)(n.strong,{children:"MongoClient"})]}),"\n",(0,i.jsxs)(n.li,{children:["A ",(0,i.jsx)(n.strong,{children:"MongoDatabase"})]}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:"That's all. Flamingock will take care of collections, indexes, and consistency defaults."}),"\n",(0,i.jsx)(n.p,{children:"Example:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-java",children:'public class App {\n  public static void main(String[] args) {\n    MongoClient client = MongoClients.create("mongodb://localhost:27017");\n    MongoDatabase db = client.getDatabase("flamingock_audit");\n\n    Flamingock.builder()\n      .setAuditStore(new MongoSyncAuditStore()\n          .withMongoClient(client)\n          .withDatabase(db))\n      .build()\n      .run();\n  }\n}\n'})}),"\n",(0,i.jsx)(n.h2,{id:"dependencies",children:"Dependencies"}),"\n",(0,i.jsx)(n.h3,{id:"required-dependencies",children:"Required dependencies"}),"\n",(0,i.jsxs)(n.table,{children:[(0,i.jsx)(n.thead,{children:(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.th,{children:"Dependency"}),(0,i.jsx)(n.th,{children:"Method"}),(0,i.jsx)(n.th,{children:"Description"})]})}),(0,i.jsxs)(n.tbody,{children:[(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"MongoClient"})}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:".withMongoClient(client)"})}),(0,i.jsxs)(n.td,{children:["MongoDB connection client - ",(0,i.jsx)(n.strong,{children:"required"})]})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"MongoDatabase"})}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:".withDatabase(database)"})}),(0,i.jsxs)(n.td,{children:["Target database instance - ",(0,i.jsx)(n.strong,{children:"required"})]})]})]})]}),"\n",(0,i.jsx)(n.h3,{id:"optional-configurations",children:"Optional configurations"}),"\n",(0,i.jsxs)(n.table,{children:[(0,i.jsx)(n.thead,{children:(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.th,{children:"Configuration"}),(0,i.jsx)(n.th,{children:"Method"}),(0,i.jsx)(n.th,{children:"Default"}),(0,i.jsx)(n.th,{children:"Description"})]})}),(0,i.jsxs)(n.tbody,{children:[(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"WriteConcern"})}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:".withWriteConcern(concern)"})}),(0,i.jsxs)(n.td,{children:[(0,i.jsx)(n.code,{children:"MAJORITY"})," with journal"]}),(0,i.jsx)(n.td,{children:"Write acknowledgment level"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"ReadConcern"})}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:".withReadConcern(concern)"})}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"MAJORITY"})}),(0,i.jsx)(n.td,{children:"Read isolation level"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"ReadPreference"})}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:".withReadPreference(pref)"})}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"PRIMARY"})}),(0,i.jsx)(n.td,{children:"Server selection for reads"})]})]})]}),"\n",(0,i.jsx)(n.h2,{id:"reusing-target-system-dependencies",children:"Reusing target system dependencies"}),"\n",(0,i.jsx)(n.p,{children:"If you're already using a MongoDB target system, you can reuse its dependencies to avoid duplicating connection configuration:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-java",children:'// Reuse dependencies from existing target system\nMongoSyncTargetSystem mongoTargetSystem = new MongoSyncTargetSystem("user-database")\n    .withMongoClient(client)\n    .withDatabase(userDatabase);\n\n// Create audit store reusing the same dependencies\nMongoSyncAuditStore auditStore = MongoSyncAuditStore\n    .reusingDependenciesFrom(mongoTargetSystem);\n\nFlamingock.builder()\n    .setAuditStore(auditStore)\n    .addTargetSystems(mongoTargetSystem)\n    .build()\n    .run();\n'})}),"\n",(0,i.jsx)(n.p,{children:"You can still override specific settings if needed:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-java",children:"MongoSyncAuditStore auditStore = MongoSyncAuditStore\n    .reusingDependenciesFrom(mongoTargetSystem)\n    .withReadConcern(ReadConcern.LOCAL);\n"})}),"\n",(0,i.jsx)(n.h2,{id:"supported-versions",children:"Supported versions"}),"\n",(0,i.jsxs)(n.table,{children:[(0,i.jsx)(n.thead,{children:(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.th,{children:"MongoDB Driver"}),(0,i.jsx)(n.th,{children:"MongoDB Server"}),(0,i.jsx)(n.th,{children:"Support level"})]})}),(0,i.jsxs)(n.tbody,{children:[(0,i.jsxs)(n.tr,{children:[(0,i.jsxs)(n.td,{children:[(0,i.jsx)(n.code,{children:"mongodb-driver-sync"})," 4.0\u20135.x"]}),(0,i.jsx)(n.td,{children:"3.6 \u2013 7.0"}),(0,i.jsx)(n.td,{children:"Full support"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsxs)(n.td,{children:[(0,i.jsx)(n.code,{children:"mongodb-driver-sync"})," 3.12.x"]}),(0,i.jsx)(n.td,{children:"3.4 \u2013 4.4"}),(0,i.jsx)(n.td,{children:"Legacy support"})]})]})]}),"\n",(0,i.jsx)(n.h2,{id:"dependencies-1",children:"Dependencies"}),"\n",(0,i.jsxs)(o.A,{groupId:"build_tool",children:[(0,i.jsx)(d.A,{value:"gradle",label:"Gradle",children:(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-kotlin",children:'implementation(platform("io.flamingock:flamingock-community-bom:$flamingockVersion"))\nimplementation("io.flamingock:flamingock-community")\n\n// MongoDB driver (if not already present)\nimplementation("org.mongodb:mongodb-driver-sync:5.2.0")\n'})})}),(0,i.jsx)(d.A,{value:"maven",label:"Maven",children:(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-xml",children:"<dependencyManagement>\n  <dependencies>\n    <dependency>\n      <groupId>io.flamingock</groupId>\n      <artifactId>flamingock-community-bom</artifactId>\n      <version>${flamingock.version}</version>\n      <type>pom</type>\n      <scope>import</scope>\n    </dependency>\n  </dependencies>\n</dependencyManagement>\n\n<dependency>\n  <groupId>io.flamingock</groupId>\n  <artifactId>flamingock-community</artifactId>\n</dependency>\n\n\x3c!-- MongoDB driver (if not already present) --\x3e\n<dependency>\n  <groupId>org.mongodb</groupId>\n  <artifactId>mongodb-driver-sync</artifactId>\n  <version>5.2.0</version>\n</dependency>\n"})})})]}),"\n",(0,i.jsx)(n.h2,{id:"configuration-options",children:"Configuration options"}),"\n",(0,i.jsxs)(n.p,{children:["MongoDB audit store works out of the box with production-ready defaults.",(0,i.jsx)(n.br,{}),"\n","Optional properties let you tune behavior if needed:"]}),"\n",(0,i.jsxs)(n.table,{children:[(0,i.jsx)(n.thead,{children:(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.th,{children:"Property"}),(0,i.jsx)(n.th,{children:"Default"}),(0,i.jsx)(n.th,{children:"Description"})]})}),(0,i.jsxs)(n.tbody,{children:[(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"mongodb.autoCreate"})}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"true"})}),(0,i.jsx)(n.td,{children:"Auto-create collections and indexes."})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"mongodb.readConcern"})}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"MAJORITY"})}),(0,i.jsx)(n.td,{children:"Read isolation level."})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"mongodb.writeConcern.w"})}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"MAJORITY"})}),(0,i.jsx)(n.td,{children:"Write acknowledgment level."})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"mongodb.writeConcern.journal"})}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"true"})}),(0,i.jsx)(n.td,{children:"Requires journal commit for durability."})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"mongodb.writeConcern.wTimeout"})}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"1s"})}),(0,i.jsx)(n.td,{children:"Max wait time for write concern fulfillment."})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"mongodb.readPreference"})}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"PRIMARY"})}),(0,i.jsx)(n.td,{children:"Node selection for reads."})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"mongodb.auditRepositoryName"})}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"flamingockAuditLogs"})}),(0,i.jsx)(n.td,{children:"Collection name for audit entries."})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"mongodb.lockRepositoryName"})}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"flamingockLocks"})}),(0,i.jsx)(n.td,{children:"Collection name for distributed locks."})]})]})]}),"\n",(0,i.jsx)(n.p,{children:"Example overriding defaults:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-java",children:'Flamingock.builder()\n  .setAuditStore(new MongoSyncAuditStore()\n      .withClient(client)\n      .withDatabase(db)\n      .withProperty("mongodb.readConcern", "LOCAL")\n      .withProperty("mongodb.writeConcern.w", 1))\n  .build()\n  .run();\n'})}),"\n",(0,i.jsxs)(n.p,{children:["\u26a0\ufe0f ",(0,i.jsx)(n.strong,{children:"Warning"}),": lowering concerns (e.g. ",(0,i.jsx)(n.code,{children:"LOCAL"}),", ",(0,i.jsx)(n.code,{children:"w=1"}),") increases performance but reduces safety.",(0,i.jsx)(n.br,{}),"\n","Recommended only for dev/test environments."]}),"\n",(0,i.jsx)(n.h2,{id:"next-steps",children:"Next steps"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["Learn about ",(0,i.jsx)(n.a,{href:"/docs/target-systems/introduction",children:"Target systems"})]}),"\n",(0,i.jsxs)(n.li,{children:["\ud83d\udc49 See a ",(0,i.jsx)(n.a,{href:"https://github.com/flamingock/flamingock-examples/tree/master/mongodb",children:"full example project"})]}),"\n"]})]})}function x(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(h,{...e})}):h(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>o,x:()=>d});var r=t(6540);const i={},s=r.createContext(i);function o(e){const n=r.useContext(s);return r.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function d(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:o(e.components),r.createElement(s.Provider,{value:n},e.children)}},9365:(e,n,t)=>{t.d(n,{A:()=>o});t(6540);var r=t(4164);const i={tabItem:"tabItem_Ymn6"};var s=t(4848);function o({children:e,hidden:n,className:t}){return(0,s.jsx)("div",{role:"tabpanel",className:(0,r.A)(i.tabItem,t),hidden:n,children:e})}}}]);