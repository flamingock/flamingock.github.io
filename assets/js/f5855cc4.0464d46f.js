"use strict";(self.webpackChunkflamingock=self.webpackChunkflamingock||[]).push([[740],{1470:(e,t,n)=>{n.d(t,{A:()=>_});var a=n(6540),r=n(4164),s=n(3104),i=n(6347),o=n(205),l=n(7485),c=n(1682),u=n(679);function d(e){return a.Children.toArray(e).filter(e=>"\n"!==e).map(e=>{if(!e||(0,a.isValidElement)(e)&&function(e){const{props:t}=e;return!!t&&"object"==typeof t&&"value"in t}(e))return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)})?.filter(Boolean)??[]}function p(e){const{values:t,children:n}=e;return(0,a.useMemo)(()=>{const e=t??function(e){return d(e).map(({props:{value:e,label:t,attributes:n,default:a}})=>({value:e,label:t,attributes:n,default:a}))}(n);return function(e){const t=(0,c.XI)(e,(e,t)=>e.value===t.value);if(t.length>0)throw new Error(`Docusaurus error: Duplicate values "${t.map(e=>e.value).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e},[t,n])}function m({value:e,tabValues:t}){return t.some(t=>t.value===e)}function h({queryString:e=!1,groupId:t}){const n=(0,i.W6)(),r=function({queryString:e=!1,groupId:t}){if("string"==typeof e)return e;if(!1===e)return null;if(!0===e&&!t)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return t??null}({queryString:e,groupId:t});return[(0,l.aZ)(r),(0,a.useCallback)(e=>{if(!r)return;const t=new URLSearchParams(n.location.search);t.set(r,e),n.replace({...n.location,search:t.toString()})},[r,n])]}function f(e){const{defaultValue:t,queryString:n=!1,groupId:r}=e,s=p(e),[i,l]=(0,a.useState)(()=>function({defaultValue:e,tabValues:t}){if(0===t.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(e){if(!m({value:e,tabValues:t}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${e}" but none of its children has the corresponding value. Available values are: ${t.map(e=>e.value).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return e}const n=t.find(e=>e.default)??t[0];if(!n)throw new Error("Unexpected error: 0 tabValues");return n.value}({defaultValue:t,tabValues:s})),[c,d]=h({queryString:n,groupId:r}),[f,b]=function({groupId:e}){const t=function(e){return e?`docusaurus.tab.${e}`:null}(e),[n,r]=(0,u.Dv)(t);return[n,(0,a.useCallback)(e=>{t&&r.set(e)},[t,r])]}({groupId:r}),g=(()=>{const e=c??f;return m({value:e,tabValues:s})?e:null})();(0,o.A)(()=>{g&&l(g)},[g]);return{selectedValue:i,selectValue:(0,a.useCallback)(e=>{if(!m({value:e,tabValues:s}))throw new Error(`Can't select invalid tab value=${e}`);l(e),d(e),b(e)},[d,b,s]),tabValues:s}}var b=n(2303);const g={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};var x=n(4848);function v({className:e,block:t,selectedValue:n,selectValue:a,tabValues:i}){const o=[],{blockElementScrollPositionUntilNextRender:l}=(0,s.a_)(),c=e=>{const t=e.currentTarget,r=o.indexOf(t),s=i[r].value;s!==n&&(l(t),a(s))},u=e=>{let t=null;switch(e.key){case"Enter":c(e);break;case"ArrowRight":{const n=o.indexOf(e.currentTarget)+1;t=o[n]??o[0];break}case"ArrowLeft":{const n=o.indexOf(e.currentTarget)-1;t=o[n]??o[o.length-1];break}}t?.focus()};return(0,x.jsx)("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,r.A)("tabs",{"tabs--block":t},e),children:i.map(({value:e,label:t,attributes:a})=>(0,x.jsx)("li",{role:"tab",tabIndex:n===e?0:-1,"aria-selected":n===e,ref:e=>{o.push(e)},onKeyDown:u,onClick:c,...a,className:(0,r.A)("tabs__item",g.tabItem,a?.className,{"tabs__item--active":n===e}),children:t??e},e))})}function j({lazy:e,children:t,selectedValue:n}){const s=(Array.isArray(t)?t:[t]).filter(Boolean);if(e){const e=s.find(e=>e.props.value===n);return e?(0,a.cloneElement)(e,{className:(0,r.A)("margin-top--md",e.props.className)}):null}return(0,x.jsx)("div",{className:"margin-top--md",children:s.map((e,t)=>(0,a.cloneElement)(e,{key:t,hidden:e.props.value!==n}))})}function y(e){const t=f(e);return(0,x.jsxs)("div",{className:(0,r.A)("tabs-container",g.tabList),children:[(0,x.jsx)(v,{...t,...e}),(0,x.jsx)(j,{...t,...e})]})}function _(e){const t=(0,b.A)();return(0,x.jsx)(y,{...e,children:d(e.children)},String(t))}},7921:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>u,contentTitle:()=>c,default:()=>m,frontMatter:()=>l,metadata:()=>a,toc:()=>d});const a=JSON.parse('{"id":"changes/types-and-implementation","title":"Types & Implementation","description":"Flamingock supports two approaches for implementing Changes: code-based and template-based. Each serves different use cases and provides the same safety guarantees.","source":"@site/docs/changes/types-and-implementation.md","sourceDirName":"changes","slug":"/changes/types-and-implementation","permalink":"/docs/changes/types-and-implementation","draft":false,"unlisted":false,"editUrl":"https://github.com/flamingock/flamingock-java/docs/changes/types-and-implementation.md","tags":[],"version":"current","sidebarPosition":5,"frontMatter":{"title":"Types & Implementation","sidebar_position":5},"sidebar":"tutorialSidebar","previous":{"title":"Transactions","permalink":"/docs/changes/transactions"},"next":{"title":"Best Practices","permalink":"/docs/changes/best-practices"}}');var r=n(4848),s=n(8453),i=n(1470),o=n(9365);const l={title:"Types & Implementation",sidebar_position:5},c="Change Types & Implementation",u={},d=[{value:"Basic YAML structure",id:"basic-yaml-structure",level:3},{value:"Basic structure",id:"basic-structure",level:3},{value:"File organization",id:"file-organization",level:2},{value:"Recommended project structure:",id:"recommended-project-structure",level:3},{value:"Best practices:",id:"best-practices",level:3},{value:"Template development",id:"template-development",level:2},{value:"Next steps",id:"next-steps",level:2}];function p(e){const t={a:"a",admonition:"admonition",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,s.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(t.header,{children:(0,r.jsx)(t.h1,{id:"change-types--implementation",children:"Change Types & Implementation"})}),"\n",(0,r.jsxs)(t.p,{children:["Flamingock supports two approaches for implementing Changes: ",(0,r.jsx)(t.strong,{children:"code-based"})," and ",(0,r.jsx)(t.strong,{children:"template-based"}),". Each serves different use cases and provides the same safety guarantees."]}),"\n",(0,r.jsxs)(i.A,{groupId:"edition",children:[(0,r.jsxs)(o.A,{value:"template",label:"Template based",default:!0,children:[(0,r.jsx)(t.p,{children:"Template-based Changes use YAML or JSON files with reusable templates. Templates provide a low-code, declarative approach for common patterns and repetitive operations. Templates can be as powerful and complex as code-based Changes - the difference is that templates are developed for reusable patterns and integrations."}),(0,r.jsx)(t.h3,{id:"basic-yaml-structure",children:"Basic YAML structure"}),(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-yaml",children:'# File: _0001__AddUserIndex.yaml\nid: add_user_index\nauthor: "database-team"\ndescription: "Add index on user email field for faster lookups"\ntargetSystem: "user-database"\ntemplateName: mongodb-index\napply:\n  type: createIndex\n  collection: users\n  indexSpec:\n    email: 1\n  options:\n    unique: true\n    name: "idx_user_email"\nrollback:\n  type: removeIndex\n  collection: users\n  indexName: "idx_user_email"\n'})}),(0,r.jsxs)(t.p,{children:["For more details about available templates and creating custom templates, see ",(0,r.jsx)(t.a,{href:"../templates/templates-introduction",children:"Templates"}),"."]})]}),(0,r.jsxs)(o.A,{value:"code",label:"Code based",children:[(0,r.jsx)(t.p,{children:"Code-based Changes are written in Java, Kotlin, or Groovy with annotations. They provide full programmatic control for custom logic or specific operations that don't fit existing templates."}),(0,r.jsx)(t.h3,{id:"basic-structure",children:"Basic structure"}),(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-java",children:'@TargetSystem("user-database")\n@Change(id = "migrate-user-emails", author = "data-team")  // order extracted from filename\npublic class _0001__MigrateUserEmails {\n\n    @Apply\n    public void apply(MongoDatabase database, ClientSession session) {\n        // Custom implementation logic with full programmatic control\n        MongoCollection<Document> users = database.getCollection("users");\n        users.updateMany(session,\n            new Document("email", new Document("$exists", true)),\n            new Document("$set", new Document("emailVerified", false)));\n    }\n\n    @Rollback\n    public void rollback(MongoDatabase database, ClientSession session) {\n        // Rollback logic\n        database.getCollection("users")\n                .updateMany(session, new Document(),\n                    new Document("$unset", new Document("emailVerified", "")));\n    }\n}\n'})})]})]}),"\n",(0,r.jsx)(t.h2,{id:"file-organization",children:"File organization"}),"\n",(0,r.jsx)(t.h3,{id:"recommended-project-structure",children:"Recommended project structure:"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{children:"src/main/java/com/yourapp/changes/\n\u251c\u2500\u2500 _0001__CreateUserIndexes.java\n\u251c\u2500\u2500 _0002__AddUserStatus.yaml\n\u251c\u2500\u2500 _0003__MigrateUserData.java\n\u251c\u2500\u2500 _0004__SetupNotifications.yaml\n\u2514\u2500\u2500 _0003__OptimizeQueries.java\n"})}),"\n",(0,r.jsx)(t.h3,{id:"best-practices",children:"Best practices:"}),"\n",(0,r.jsxs)(t.ul,{children:["\n",(0,r.jsxs)(t.li,{children:[(0,r.jsx)(t.strong,{children:"Keep together"}),": Store both code and template files in the same directory"]}),"\n",(0,r.jsxs)(t.li,{children:[(0,r.jsx)(t.strong,{children:"Consistent naming"}),": Follow ",(0,r.jsx)(t.code,{children:"_ORDER__CHANGE_NAME"})," pattern for both types (recommended: ",(0,r.jsx)(t.code,{children:"NN"}),")"]}),"\n",(0,r.jsxs)(t.li,{children:[(0,r.jsx)(t.strong,{children:"Order in filename"}),": When using the naming pattern, order in annotation/yaml is optional"]}),"\n"]}),"\n",(0,r.jsx)(t.admonition,{title:"Order Field Rules",type:"info",children:(0,r.jsxs)(t.p,{children:["Using the ",(0,r.jsx)(t.code,{children:"_ORDER__CHANGE-NAME"})," pattern, the order is extracted from the filename. For complete rules about order and file naming, see ",(0,r.jsx)(t.a,{href:"./anatomy-and-structure#file-name-and-order",children:"Anatomy & Structure - File name and order"}),"."]})}),"\n",(0,r.jsx)(t.h2,{id:"template-development",children:"Template development"}),"\n",(0,r.jsx)(t.p,{children:"Flamingock and the community provide useful templates for common operations. Organizations can also develop their own templates to standardize patterns and integrations specific to their needs."}),"\n",(0,r.jsxs)(t.p,{children:["For more information about available templates and how to create custom templates, see ",(0,r.jsx)(t.a,{href:"../templates/templates-introduction",children:"Templates"}),"."]}),"\n",(0,r.jsx)(t.h2,{id:"next-steps",children:"Next steps"}),"\n",(0,r.jsxs)(t.ul,{children:["\n",(0,r.jsxs)(t.li,{children:[(0,r.jsx)(t.strong,{children:(0,r.jsx)(t.a,{href:"./best-practices",children:"Best Practices"})})," - Learn proven patterns for reliable Changes"]}),"\n",(0,r.jsxs)(t.li,{children:[(0,r.jsx)(t.strong,{children:(0,r.jsx)(t.a,{href:"../templates/templates-introduction",children:"Templates"})})," - Explore available templates and create custom ones"]}),"\n",(0,r.jsxs)(t.li,{children:[(0,r.jsx)(t.strong,{children:(0,r.jsx)(t.a,{href:"../target-systems/introduction",children:"Target Systems"})})," - Configure where your changes will be applied"]}),"\n"]})]})}function m(e={}){const{wrapper:t}={...(0,s.R)(),...e.components};return t?(0,r.jsx)(t,{...e,children:(0,r.jsx)(p,{...e})}):p(e)}},8453:(e,t,n)=>{n.d(t,{R:()=>i,x:()=>o});var a=n(6540);const r={},s=a.createContext(r);function i(e){const t=a.useContext(s);return a.useMemo(function(){return"function"==typeof e?e(t):{...t,...e}},[t,e])}function o(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:i(e.components),a.createElement(s.Provider,{value:t},e.children)}},9365:(e,t,n)=>{n.d(t,{A:()=>i});n(6540);var a=n(4164);const r={tabItem:"tabItem_Ymn6"};var s=n(4848);function i({children:e,hidden:t,className:n}){return(0,s.jsx)("div",{role:"tabpanel",className:(0,a.A)(r.tabItem,n),hidden:t,children:e})}}}]);