"use strict";(self.webpackChunkflamingock=self.webpackChunkflamingock||[]).push([[4489],{2244:(t,e,n)=>{n.r(e),n.d(e,{assets:()=>d,contentTitle:()=>a,default:()=>l,frontMatter:()=>r,metadata:()=>i,toc:()=>u});const i=JSON.parse('{"id":"audit-stores/introduction","title":"Introduction","description":"The audit store is Flamingock\'s dedicated system for tracking execution history, preventing duplicate executions, and ensuring safe system evolution.","source":"@site/docs/audit-stores/introduction.md","sourceDirName":"audit-stores","slug":"/audit-stores/introduction","permalink":"/docs/audit-stores/introduction","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/audit-stores/introduction.md","tags":[],"version":"current","sidebarPosition":1,"frontMatter":{"title":"Introduction","sidebar_position":1},"sidebar":"tutorialSidebar","previous":{"title":"Default (Non-transactional)","permalink":"/docs/target-systems/default-target-system"},"next":{"title":"MongoDB","permalink":"/docs/audit-stores/community/mongodb-audit-store"}}');var o=n(4848),s=n(8453);const r={title:"Introduction",sidebar_position:1},a="Audit stores",d={},u=[{value:"What is the audit store?",id:"what-is-the-audit-store",level:2},{value:"Cloud Edition",id:"cloud-edition",level:2},{value:"Community Edition",id:"community-edition",level:2},{value:"Community Audit Stores general configuration pattern",id:"community-audit-stores-general-configuration-pattern",level:3},{value:"Spring Boot configuration",id:"spring-boot-configuration",level:3}];function c(t){const e={a:"a",blockquote:"blockquote",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,s.R)(),...t.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(e.header,{children:(0,o.jsx)(e.h1,{id:"audit-stores",children:"Audit stores"})}),"\n",(0,o.jsx)(e.p,{children:"The audit store is Flamingock's dedicated system for tracking execution history, preventing duplicate executions, and ensuring safe system evolution."}),"\n",(0,o.jsx)(e.h2,{id:"what-is-the-audit-store",children:"What is the audit store?"}),"\n",(0,o.jsx)(e.p,{children:"The audit store tracks:"}),"\n",(0,o.jsxs)(e.ul,{children:["\n",(0,o.jsxs)(e.li,{children:[(0,o.jsx)(e.strong,{children:"Execution history"}),": Which ChangeUnits ran, when, and with what outcome"]}),"\n",(0,o.jsxs)(e.li,{children:[(0,o.jsx)(e.strong,{children:"Distributed locking"}),": Prevents concurrent executions across multiple instances"]}),"\n",(0,o.jsxs)(e.li,{children:[(0,o.jsx)(e.strong,{children:"Issue tracking"}),": Failed or uncertain executions requiring resolution"]}),"\n"]}),"\n",(0,o.jsx)(e.p,{children:"Unlike target systems (which your code modifies), the audit store is managed automatically by Flamingock and never modified by your ChangeUnits."}),"\n",(0,o.jsxs)(e.blockquote,{children:["\n",(0,o.jsxs)(e.p,{children:[(0,o.jsx)(e.strong,{children:"Conceptual overview"}),": For architectural understanding, see ",(0,o.jsx)(e.a,{href:"/docs/overview/audit-store-vs-target-system",children:"Target systems vs audit store"})]}),"\n"]}),"\n",(0,o.jsx)(e.h2,{id:"cloud-edition",children:"Cloud Edition"}),"\n",(0,o.jsxs)(e.p,{children:[(0,o.jsx)(e.strong,{children:"No configuration needed"})," - Flamingock Cloud provides a fully managed audit store with superior synchronization, recovery mechanisms, real-time dashboards, and multi-environment governance."]}),"\n",(0,o.jsx)(e.h2,{id:"community-edition",children:"Community Edition"}),"\n",(0,o.jsx)(e.p,{children:"With Community Edition, you provide and configure your own audit store. Flamingock supports several databases:"}),"\n",(0,o.jsxs)(e.ul,{children:["\n",(0,o.jsx)(e.li,{children:(0,o.jsx)(e.a,{href:"/docs/audit-stores/community/mongodb-audit-store",children:"MongoDB audit store"})}),"\n",(0,o.jsx)(e.li,{children:(0,o.jsx)(e.a,{href:"/docs/audit-stores/community/mongodb-springdata-audit-store",children:"MongoDB Spring Data audit store"})}),"\n",(0,o.jsx)(e.li,{children:(0,o.jsx)(e.a,{href:"/docs/audit-stores/community/dynamodb-audit-store",children:"DynamoDB audit store"})}),"\n",(0,o.jsx)(e.li,{children:(0,o.jsx)(e.a,{href:"/docs/audit-stores/community/couchbase-audit-store",children:"Couchbase audit store"})}),"\n"]}),"\n",(0,o.jsx)(e.h3,{id:"community-audit-stores-general-configuration-pattern",children:"Community Audit Stores general configuration pattern"}),"\n",(0,o.jsx)(e.p,{children:"In Community Audit Stores, you register the audit store with the Flamingock builder:"}),"\n",(0,o.jsx)(e.pre,{children:(0,o.jsx)(e.code,{className:"language-java",children:"// Generic example - audit store configuration\npublic class App {\n  public static void main(String[] args) {\n    // Create your audit store connection\n    AuditStore auditStore = new MongoSyncAuditStore(mongoClient, mongoDatabase);\n    \n    // Register with Flamingock\n    FlamingockStandalone\n      .setAuditStore(auditStore)  // Set the audit store\n      .addTargetSystems(myTargetSystem)\n      .build()\n      .run();\n  }\n}\n"})}),"\n",(0,o.jsx)(e.h3,{id:"spring-boot-configuration",children:"Spring Boot configuration"}),"\n",(0,o.jsx)(e.pre,{children:(0,o.jsx)(e.code,{className:"language-java",children:'@Bean\npublic AuditStore auditStore(MongoClient mongoClient) {\n    return new MongoSyncAuditStore(mongoClient, "flamingock-audit");\n}\n\n// Flamingock Spring Boot auto-configuration will pick this up automatically\n'})}),"\n",(0,o.jsxs)(e.p,{children:[(0,o.jsx)(e.strong,{children:"Key takeaway"}),": The audit store is critical for Flamingock's safety guarantees. Cloud Edition provides this fully managed, while Community Audit Stores requires you to configure one of the supported databases."]})]})}function l(t={}){const{wrapper:e}={...(0,s.R)(),...t.components};return e?(0,o.jsx)(e,{...t,children:(0,o.jsx)(c,{...t})}):c(t)}},8453:(t,e,n)=>{n.d(e,{R:()=>r,x:()=>a});var i=n(6540);const o={},s=i.createContext(o);function r(t){const e=i.useContext(s);return i.useMemo(function(){return"function"==typeof t?t(e):{...e,...t}},[e,t])}function a(t){let e;return e=t.disableParentContext?"function"==typeof t.components?t.components(o):t.components||o:r(t.components),i.createElement(s.Provider,{value:e},t.children)}}}]);