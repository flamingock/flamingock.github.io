"use strict";(self.webpackChunkflamingock=self.webpackChunkflamingock||[]).push([[3110],{3585:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>o,contentTitle:()=>l,default:()=>h,frontMatter:()=>r,metadata:()=>t,toc:()=>d});const t=JSON.parse('{"id":"overview/key-features","title":"Key features","description":"Flamingock brings safety, auditability, and developer productivity into the way distributed systems evolve.","source":"@site/docs/overview/key-features.md","sourceDirName":"overview","slug":"/overview/key-features","permalink":"/docs/overview/key-features","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/overview/key-features.md","tags":[],"version":"current","sidebarPosition":50,"frontMatter":{"title":"Key features","sidebar_position":50},"sidebar":"tutorialSidebar","previous":{"title":"Change-as-Code (CaC)","permalink":"/docs/overview/Change-as-Code"},"next":{"title":"Flamingock editions","permalink":"/docs/overview/Editions"}}');var s=i(4848),a=i(8453);const r={title:"Key features",sidebar_position:50},l="Key Features",o={},d=[{value:"Safety by Default",id:"safety-by-default",level:3},{value:"Change-as-Code (CaC)",id:"change-as-code-cac",level:3},{value:"Dual Approach: Code and Templates",id:"dual-approach-code-and-templates",level:3},{value:"Target System Abstraction",id:"target-system-abstraction",level:3},{value:"Immutable, Auditable History (Audit Store)",id:"immutable-auditable-history-audit-store",level:3},{value:"Staging and Grouping",id:"staging-and-grouping",level:3},{value:"Startup Synchronization",id:"startup-synchronization",level:3},{value:"Developer Experience",id:"developer-experience",level:3},{value:"CLI",id:"cli",level:3},{value:"What about the Cloud Edition?",id:"what-about-the-cloud-edition",level:3}];function c(e){const n={admonition:"admonition",br:"br",h1:"h1",h3:"h3",header:"header",hr:"hr",li:"li",mdxAdmonitionTitle:"mdxAdmonitionTitle",p:"p",strong:"strong",ul:"ul",...(0,a.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.header,{children:(0,s.jsx)(n.h1,{id:"key-features",children:"Key Features"})}),"\n",(0,s.jsxs)(n.p,{children:["Flamingock brings ",(0,s.jsx)(n.strong,{children:"safety, auditability, and developer productivity"})," into the way distributed systems evolve.",(0,s.jsx)(n.br,{}),"\n","These are the pillars you can rely on today, plus a glimpse of what\u2019s coming next."]}),"\n",(0,s.jsx)(n.h3,{id:"safety-by-default",children:"Safety by Default"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"If Flamingock cannot guarantee a safe outcome, it stops automatically."}),"\n",(0,s.jsx)(n.li,{children:"Prevents silent corruption in production systems and ensures predictable deployments."}),"\n"]}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h3,{id:"change-as-code-cac",children:"Change-as-Code (CaC)"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["Define changes as ",(0,s.jsx)(n.strong,{children:"versioned ChangeUnits"})," that are executed once, safely, and auditable."]}),"\n",(0,s.jsx)(n.li,{children:"All changes are tracked in the audit store and never silently skipped."}),"\n",(0,s.jsx)(n.li,{children:"Guarantees immutability: once applied, a ChangeUnit cannot be modified."}),"\n"]}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h3,{id:"dual-approach-code-and-templates",children:"Dual Approach: Code and Templates"}),"\n",(0,s.jsx)(n.p,{children:"Flamingock supports two complementary approaches for defining ChangeUnits:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Code-based ChangeUnits"}),": Full control using Java/Kotlin classes, annotations, and dependency injection."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Template-based ChangeUnits"}),": Declarative, YAML-based changes that reuse shared templates."]}),"\n"]}),"\n",(0,s.jsxs)(n.admonition,{type:"note",children:[(0,s.jsx)(n.mdxAdmonitionTitle,{}),(0,s.jsxs)(n.p,{children:["Templates are in ",(0,s.jsx)(n.strong,{children:"beta"}),". You can already create and use custom templates, while official ones are still evolving."]})]}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h3,{id:"target-system-abstraction",children:"Target System Abstraction"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["Explicitly declare the ",(0,s.jsx)(n.strong,{children:"systems you evolve"})," (databases, queues, APIs, S3, etc.)."]}),"\n",(0,s.jsx)(n.li,{children:"Transactional target systems are executed within transactions where possible."}),"\n",(0,s.jsx)(n.li,{children:"Non-transactional systems are safeguarded through audit tracking and rollback mechanisms."}),"\n"]}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h3,{id:"immutable-auditable-history-audit-store",children:"Immutable, Auditable History (Audit Store)"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"All executions are recorded in a dedicated audit store, decoupled from business data."}),"\n",(0,s.jsxs)(n.li,{children:["Provides a ",(0,s.jsx)(n.strong,{children:"single source of truth"})," for compliance, governance, and troubleshooting."]}),"\n"]}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h3,{id:"staging-and-grouping",children:"Staging and Grouping"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["Organize ChangeUnits into ",(0,s.jsx)(n.strong,{children:"stages"})," for modularity and separation of concerns."]}),"\n",(0,s.jsx)(n.li,{children:"Execute subsets of changes independently while maintaining global audit consistency."}),"\n"]}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h3,{id:"startup-synchronization",children:"Startup Synchronization"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["Flamingock executes during ",(0,s.jsx)(n.strong,{children:"application startup"}),"."]}),"\n",(0,s.jsx)(n.li,{children:"Ensures your service and its dependent systems are aligned before going live."}),"\n"]}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h3,{id:"developer-experience",children:"Developer Experience"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Built-in dependency injection for clean and testable change logic."}),"\n",(0,s.jsx)(n.li,{children:"Seamless Spring Boot integration with minimal setup."}),"\n",(0,s.jsx)(n.li,{children:"GraalVM support for native image compilation."}),"\n"]}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h3,{id:"cli",children:"CLI"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["A lightweight CLI is available today for ",(0,s.jsx)(n.strong,{children:"maintenance and recovery"}),"."]}),"\n",(0,s.jsxs)(n.li,{children:["Capabilities include:","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Listing the history of executed changes"}),"\n",(0,s.jsx)(n.li,{children:"Auditing change status"}),"\n",(0,s.jsx)(n.li,{children:"Managing fixes in recovery scenarios"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h3,{id:"what-about-the-cloud-edition",children:"What about the Cloud Edition?"}),"\n",(0,s.jsxs)(n.p,{children:["The ",(0,s.jsx)(n.strong,{children:"Cloud Edition"})," is coming soon, extending Flamingock with ",(0,s.jsx)(n.strong,{children:"additional enterprise-grade features"}),"."]})]})}function h(e={}){const{wrapper:n}={...(0,a.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(c,{...e})}):c(e)}},8453:(e,n,i)=>{i.d(n,{R:()=>r,x:()=>l});var t=i(6540);const s={},a=t.createContext(s);function r(e){const n=t.useContext(a);return t.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:r(e.components),t.createElement(a.Provider,{value:n},e.children)}}}]);