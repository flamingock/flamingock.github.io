"use strict";(self.webpackChunkflamingock=self.webpackChunkflamingock||[]).push([[5477],{5678:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>l,contentTitle:()=>c,default:()=>h,frontMatter:()=>o,metadata:()=>t,toc:()=>a});const t=JSON.parse('{"id":"flamingock-library-config/lock","title":"Lock","description":"Flamingock uses a distributed lock to ensure that changes are only applied once and only once, even when multiple instances of your application start simultaneously in a distributed system.","source":"@site/docs/flamingock-library-config/lock.md","sourceDirName":"flamingock-library-config","slug":"/flamingock-library-config/lock","permalink":"/docs/flamingock-library-config/lock","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/flamingock-library-config/lock.md","tags":[],"version":"current","sidebarPosition":30,"frontMatter":{"title":"Lock","sidebar_position":30},"sidebar":"tutorialSidebar","previous":{"title":"Context and dependencies","permalink":"/docs/flamingock-library-config/context-and-dependencies"},"next":{"title":"Transactions","permalink":"/docs/flamingock-library-config/transactions"}}');var s=i(4848),r=i(8453);const o={title:"Lock",sidebar_position:30},c="Lock",l={},a=[{value:"Configurable properties",id:"configurable-properties",level:2},{value:"Why locking matters",id:"why-locking-matters",level:2},{value:"Refresh Daemon (safety net)",id:"refresh-daemon-safety-net",level:2},{value:"Configuration Examples",id:"configuration-examples",level:2},{value:"Builder",id:"builder",level:3},{value:"When to tweak Lock settings",id:"when-to-tweak-lock-settings",level:2},{value:"\u2705 Best Practices",id:"-best-practices",level:2}];function d(e){const n={admonition:"admonition",br:"br",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",hr:"hr",li:"li",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,r.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.header,{children:(0,s.jsx)(n.h1,{id:"lock",children:"Lock"})}),"\n",(0,s.jsxs)(n.p,{children:["Flamingock uses a distributed lock to ensure that changes are only applied ",(0,s.jsx)(n.strong,{children:"once and only once"}),", even when multiple instances of your application start simultaneously in a distributed system."]}),"\n",(0,s.jsxs)(n.p,{children:["This mechanism is ",(0,s.jsx)(n.strong,{children:"mandatory"})," and applies in both Cloud and Community editions:"]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["In ",(0,s.jsx)(n.strong,{children:"Cloud Edition"}),", the lock is managed by Flamingock\u2019s backend"]}),"\n",(0,s.jsxs)(n.li,{children:["In ",(0,s.jsx)(n.strong,{children:"Community Audit Stores"}),", the lock is stored in your configured database (e.g., MongoDB, DynamoDB)"]}),"\n"]}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h2,{id:"configurable-properties",children:"Configurable properties"}),"\n",(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{children:"Property"}),(0,s.jsx)(n.th,{children:"Default"}),(0,s.jsx)(n.th,{children:"Description"})]})}),(0,s.jsxs)(n.tbody,{children:[(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"lockAcquiredForMillis"})}),(0,s.jsxs)(n.td,{children:[(0,s.jsx)(n.code,{children:"60000"})," (1 min)"]}),(0,s.jsx)(n.td,{children:"Time the lock remains valid once acquired. Automatically released if not refreshed."})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"lockQuitTryingAfterMillis"})}),(0,s.jsxs)(n.td,{children:[(0,s.jsx)(n.code,{children:"180000"})," (3 min)"]}),(0,s.jsx)(n.td,{children:"How long to retry acquiring the lock if another instance holds it."})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"lockTryFrequencyMillis"})}),(0,s.jsxs)(n.td,{children:[(0,s.jsx)(n.code,{children:"1000"})," (1 sec)"]}),(0,s.jsx)(n.td,{children:"Interval between attempts while waiting for the lock."})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"throwExceptionIfCannotObtainLock"})}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"true"})}),(0,s.jsx)(n.td,{children:"Whether Flamingock should fail if the lock can't be acquired."})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"enableRefreshDaemon"})}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"true"})}),(0,s.jsx)(n.td,{children:"Whether to run a background thread that periodically extends the lock."})]})]})]}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h2,{id:"why-locking-matters",children:"Why locking matters"}),"\n",(0,s.jsxs)(n.p,{children:["In distributed systems, multiple app instances may start simultaneously \u2014 but only ",(0,s.jsx)(n.strong,{children:"one"})," should apply pending changes. Flamingock uses locking to:"]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Prevent race conditions"}),"\n",(0,s.jsx)(n.li,{children:"Ensure consistent and safe state transitions"}),"\n",(0,s.jsx)(n.li,{children:"Guarantee single execution of each change"}),"\n"]}),"\n",(0,s.jsx)(n.admonition,{type:"info",children:(0,s.jsx)(n.p,{children:"If no pending changes exist, the lock is not acquired and startup proceeds normally."})}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h2,{id:"refresh-daemon-safety-net",children:"Refresh Daemon (safety net)"}),"\n",(0,s.jsxs)(n.p,{children:["The ",(0,s.jsx)(n.strong,{children:"refresh daemon"})," is a background thread that extends the lock before it expires.",(0,s.jsx)(n.br,{}),"\n","It\u2019s critical for ",(0,s.jsx)(n.strong,{children:"long-running changes"})," that might exceed the lock duration."]}),"\n",(0,s.jsx)(n.p,{children:"Without the daemon:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"A long-running change (e.g., 90s) could outlive a default lock (e.g., 60s)"}),"\n",(0,s.jsx)(n.li,{children:"Another instance might acquire the lock prematurely, causing conflict"}),"\n"]}),"\n",(0,s.jsx)(n.admonition,{type:"note",children:(0,s.jsx)(n.p,{children:"By default, Flamingock uses proxy-based injection guards. Before executing any injected dependency, Flamingock verifies that the lock is still valid."})}),"\n",(0,s.jsxs)(n.p,{children:["If you're injecting ",(0,s.jsx)(n.strong,{children:"non-critical components"})," (e.g., a local list or stateless helper), you can annotate them with ",(0,s.jsx)(n.code,{children:"@NonLockGuarded"})," to avoid the proxy overhead."]}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h2,{id:"configuration-examples",children:"Configuration Examples"}),"\n",(0,s.jsx)(n.h3,{id:"builder",children:"Builder"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-java",children:"FlamingockStandalone\n  .setLockAcquiredForMillis(120000)\n  .setLockQuitTryingAfterMillis(300000)\n  .setLockTryFrequencyMillis(2000)\n  .setThrowExceptionIfCannotObtainLock(true)\n  .setEnableRefreshDaemon(true)\n  ...\n"})}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h2,{id:"when-to-tweak-lock-settings",children:"When to tweak Lock settings"}),"\n",(0,s.jsx)(n.p,{children:"Most projects can use the default configuration. You may need to adjust values if:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["You expect ",(0,s.jsx)(n.strong,{children:"long-running changes"})," (increase ",(0,s.jsx)(n.code,{children:"lockAcquiredForMillis"}),")"]}),"\n",(0,s.jsxs)(n.li,{children:["You run ",(0,s.jsx)(n.strong,{children:"many app instances"})," and want to reduce startup wait (decrease ",(0,s.jsx)(n.code,{children:"lockTryFrequencyMillis"}),")"]}),"\n",(0,s.jsxs)(n.li,{children:["You want Flamingock to ",(0,s.jsx)(n.strong,{children:"fail fast"})," if it can't acquire a lock (keep ",(0,s.jsx)(n.code,{children:"throwExceptionIfCannotObtainLock"})," as ",(0,s.jsx)(n.code,{children:"true"}),")"]}),"\n"]}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h2,{id:"-best-practices",children:"\u2705 Best Practices"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["Keep the refresh daemon ",(0,s.jsx)(n.strong,{children:"enabled"}),", especially for distributed or slow-processing environments"]}),"\n",(0,s.jsxs)(n.li,{children:["Avoid setting ",(0,s.jsx)(n.code,{children:"lockAcquiredForMillis"})," too short if any changes might run longer"]}),"\n",(0,s.jsxs)(n.li,{children:["Use ",(0,s.jsx)(n.code,{children:"@NonLockGuarded"})," sparingly \u2014 only when you're sure no side-effects will occur"]}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(d,{...e})}):d(e)}},8453:(e,n,i)=>{i.d(n,{R:()=>o,x:()=>c});var t=i(6540);const s={},r=t.createContext(s);function o(e){const n=t.useContext(r);return t.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:o(e.components),t.createElement(r.Provider,{value:n},e.children)}}}]);