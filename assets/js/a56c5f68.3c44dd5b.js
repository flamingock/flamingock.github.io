"use strict";(self.webpackChunkflamingock=self.webpackChunkflamingock||[]).push([[67],{1470:(e,n,t)=>{t.d(n,{A:()=>w});var r=t(6540),o=t(4164),i=t(3104),s=t(6347),a=t(205),d=t(7485),c=t(1682),l=t(679);function u(e){return r.Children.toArray(e).filter(e=>"\n"!==e).map(e=>{if(!e||(0,r.isValidElement)(e)&&function(e){const{props:n}=e;return!!n&&"object"==typeof n&&"value"in n}(e))return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)})?.filter(Boolean)??[]}function h(e){const{values:n,children:t}=e;return(0,r.useMemo)(()=>{const e=n??function(e){return u(e).map(({props:{value:e,label:n,attributes:t,default:r}})=>({value:e,label:n,attributes:t,default:r}))}(t);return function(e){const n=(0,c.XI)(e,(e,n)=>e.value===n.value);if(n.length>0)throw new Error(`Docusaurus error: Duplicate values "${n.map(e=>e.value).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e},[n,t])}function x({value:e,tabValues:n}){return n.some(n=>n.value===e)}function m({queryString:e=!1,groupId:n}){const t=(0,s.W6)(),o=function({queryString:e=!1,groupId:n}){if("string"==typeof e)return e;if(!1===e)return null;if(!0===e&&!n)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return n??null}({queryString:e,groupId:n});return[(0,d.aZ)(o),(0,r.useCallback)(e=>{if(!o)return;const n=new URLSearchParams(t.location.search);n.set(o,e),t.replace({...t.location,search:n.toString()})},[o,t])]}function p(e){const{defaultValue:n,queryString:t=!1,groupId:o}=e,i=h(e),[s,d]=(0,r.useState)(()=>function({defaultValue:e,tabValues:n}){if(0===n.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(e){if(!x({value:e,tabValues:n}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${e}" but none of its children has the corresponding value. Available values are: ${n.map(e=>e.value).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return e}const t=n.find(e=>e.default)??n[0];if(!t)throw new Error("Unexpected error: 0 tabValues");return t.value}({defaultValue:n,tabValues:i})),[c,u]=m({queryString:t,groupId:o}),[p,g]=function({groupId:e}){const n=function(e){return e?`docusaurus.tab.${e}`:null}(e),[t,o]=(0,l.Dv)(n);return[t,(0,r.useCallback)(e=>{n&&o.set(e)},[n,o])]}({groupId:o}),j=(()=>{const e=c??p;return x({value:e,tabValues:i})?e:null})();(0,a.A)(()=>{j&&d(j)},[j]);return{selectedValue:s,selectValue:(0,r.useCallback)(e=>{if(!x({value:e,tabValues:i}))throw new Error(`Can't select invalid tab value=${e}`);d(e),u(e),g(e)},[u,g,i]),tabValues:i}}var g=t(2303);const j={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};var f=t(4848);function b({className:e,block:n,selectedValue:t,selectValue:r,tabValues:s}){const a=[],{blockElementScrollPositionUntilNextRender:d}=(0,i.a_)(),c=e=>{const n=e.currentTarget,o=a.indexOf(n),i=s[o].value;i!==t&&(d(n),r(i))},l=e=>{let n=null;switch(e.key){case"Enter":c(e);break;case"ArrowRight":{const t=a.indexOf(e.currentTarget)+1;n=a[t]??a[0];break}case"ArrowLeft":{const t=a.indexOf(e.currentTarget)-1;n=a[t]??a[a.length-1];break}}n?.focus()};return(0,f.jsx)("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,o.A)("tabs",{"tabs--block":n},e),children:s.map(({value:e,label:n,attributes:r})=>(0,f.jsx)("li",{role:"tab",tabIndex:t===e?0:-1,"aria-selected":t===e,ref:e=>{a.push(e)},onKeyDown:l,onClick:c,...r,className:(0,o.A)("tabs__item",j.tabItem,r?.className,{"tabs__item--active":t===e}),children:n??e},e))})}function v({lazy:e,children:n,selectedValue:t}){const i=(Array.isArray(n)?n:[n]).filter(Boolean);if(e){const e=i.find(e=>e.props.value===t);return e?(0,r.cloneElement)(e,{className:(0,o.A)("margin-top--md",e.props.className)}):null}return(0,f.jsx)("div",{className:"margin-top--md",children:i.map((e,n)=>(0,r.cloneElement)(e,{key:n,hidden:e.props.value!==t}))})}function y(e){const n=p(e);return(0,f.jsxs)("div",{className:(0,o.A)("tabs-container",j.tabList),children:[(0,f.jsx)(b,{...n,...e}),(0,f.jsx)(v,{...n,...e})]})}function w(e){const n=(0,g.A)();return(0,f.jsx)(y,{...e,children:u(e.children)},String(n))}},2456:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>c,default:()=>x,frontMatter:()=>d,metadata:()=>r,toc:()=>u});const r=JSON.parse('{"id":"audit-stores/community/mongodb-audit-store","title":"MongoDB","description":"The MongoDB audit store (MongoDBSyncAuditStore) enables Flamingock to record execution history and ensure safe coordination across distributed deployments using MongoDB as the storage backend.","source":"@site/docs/audit-stores/community/mongodb-audit-store.md","sourceDirName":"audit-stores/community","slug":"/audit-stores/community/mongodb-audit-store","permalink":"/docs/audit-stores/community/mongodb-audit-store","draft":false,"unlisted":false,"editUrl":"https://github.com/flamingock/flamingock-java/docs/audit-stores/community/mongodb-audit-store.md","tags":[],"version":"current","sidebarPosition":2,"frontMatter":{"title":"MongoDB","sidebar_position":2},"sidebar":"tutorialSidebar","previous":{"title":"Introduction","permalink":"/docs/audit-stores/introduction"},"next":{"title":"DynamoDB","permalink":"/docs/audit-stores/community/dynamodb-audit-store"}}');var o=t(4848),i=t(8453),s=t(1470),a=t(9365);const d={title:"MongoDB",sidebar_position:2},c="MongoDB Audit Store",l={},u=[{value:"Version Compatibility",id:"version-compatibility",level:2},{value:"Installation",id:"installation",level:2},{value:"Basic setup",id:"basic-setup",level:2},{value:"Audit Store Configuration",id:"audit-store-configuration",level:2},{value:"Constructor Dependencies (Mandatory)",id:"constructor-dependencies-mandatory",level:3},{value:"Optional Configuration (.withXXX() methods)",id:"optional-configuration-withxxx-methods",level:3},{value:"Configuration example",id:"configuration-example",level:2},{value:"Next steps",id:"next-steps",level:2}];function h(e){const n={a:"a",admonition:"admonition",blockquote:"blockquote",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,i.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(n.header,{children:(0,o.jsx)(n.h1,{id:"mongodb-audit-store",children:"MongoDB Audit Store"})}),"\n",(0,o.jsxs)(n.p,{children:["The MongoDB audit store (",(0,o.jsx)(n.code,{children:"MongoDBSyncAuditStore"}),") enables Flamingock to record execution history and ensure safe coordination across distributed deployments using MongoDB as the storage backend."]}),"\n",(0,o.jsxs)(n.blockquote,{children:["\n",(0,o.jsxs)(n.p,{children:["For a conceptual explanation of the audit store vs target systems, see ",(0,o.jsx)(n.a,{href:"/docs/overview/audit-store-vs-target-system",children:"Audit store vs target system"}),"."]}),"\n"]}),"\n",(0,o.jsx)(n.h2,{id:"version-compatibility",children:"Version Compatibility"}),"\n",(0,o.jsxs)(n.table,{children:[(0,o.jsx)(n.thead,{children:(0,o.jsxs)(n.tr,{children:[(0,o.jsx)(n.th,{children:"Component"}),(0,o.jsx)(n.th,{children:"Version Requirement"})]})}),(0,o.jsx)(n.tbody,{children:(0,o.jsxs)(n.tr,{children:[(0,o.jsx)(n.td,{children:"MongoDB Java Driver"}),(0,o.jsx)(n.td,{children:"4.0.0+"})]})})]}),"\n",(0,o.jsx)(n.p,{children:"MongoDB 4.0+ is recommended for optimal performance and feature support."}),"\n",(0,o.jsx)(n.h2,{id:"installation",children:"Installation"}),"\n",(0,o.jsx)(n.p,{children:"Add the MongoDB Java sync driver dependency to your project:"}),"\n",(0,o.jsxs)(s.A,{groupId:"gradle_maven",children:[(0,o.jsx)(a.A,{value:"gradle",label:"Gradle",default:!0,children:(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-kotlin",children:'implementation("org.mongodb:mongodb-driver-sync:5.2.0")\n'})})}),(0,o.jsx)(a.A,{value:"maven",label:"Maven",children:(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-xml",children:"<dependency>\n    <groupId>org.mongodb</groupId>\n    <artifactId>mongodb-driver-sync</artifactId>\n    <version>5.2.0</version> \x3c!-- 4.0.0+ supported --\x3e\n</dependency>\n"})})})]}),"\n",(0,o.jsx)(n.h2,{id:"basic-setup",children:"Basic setup"}),"\n",(0,o.jsx)(n.p,{children:"Configure the audit store:"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-java",children:"var auditStore = new MongoDBSyncAuditStore(mongoClient, mongoDatabase);\n"})}),"\n",(0,o.jsxs)(n.p,{children:["The constructor requires the MongoDB client and database. Optional configurations can be added via ",(0,o.jsx)(n.code,{children:".withXXX()"})," methods."]}),"\n",(0,o.jsx)(n.admonition,{title:"Register Audit Store",type:"info",children:(0,o.jsxs)(n.p,{children:["Once created, you need to register this audit store with Flamingock. See ",(0,o.jsx)(n.a,{href:"/docs/audit-stores/introduction#registering-the-community-audit-store",children:"Registering the community audit store"})," for details."]})}),"\n",(0,o.jsx)(n.h2,{id:"audit-store-configuration",children:"Audit Store Configuration"}),"\n",(0,o.jsx)(n.p,{children:"The MongoDB audit store uses explicit configuration with no global context fallback."}),"\n",(0,o.jsx)(n.h3,{id:"constructor-dependencies-mandatory",children:"Constructor Dependencies (Mandatory)"}),"\n",(0,o.jsxs)(n.p,{children:["These dependencies must be provided at audit store creation time with ",(0,o.jsx)(n.strong,{children:"no global context fallback"}),":"]}),"\n",(0,o.jsxs)(n.table,{children:[(0,o.jsx)(n.thead,{children:(0,o.jsxs)(n.tr,{children:[(0,o.jsx)(n.th,{children:"Dependency"}),(0,o.jsx)(n.th,{children:"Constructor Parameter"}),(0,o.jsx)(n.th,{children:"Description"})]})}),(0,o.jsxs)(n.tbody,{children:[(0,o.jsxs)(n.tr,{children:[(0,o.jsx)(n.td,{children:(0,o.jsx)(n.code,{children:"MongoClient"})}),(0,o.jsx)(n.td,{children:(0,o.jsx)(n.code,{children:"mongoClient"})}),(0,o.jsxs)(n.td,{children:["MongoDB connection client - ",(0,o.jsx)(n.strong,{children:"required"})," for audit store configuration"]})]}),(0,o.jsxs)(n.tr,{children:[(0,o.jsx)(n.td,{children:(0,o.jsx)(n.code,{children:"MongoDatabase"})}),(0,o.jsx)(n.td,{children:(0,o.jsx)(n.code,{children:"mongoDatabase"})}),(0,o.jsxs)(n.td,{children:["Target database instance - ",(0,o.jsx)(n.strong,{children:"required"})," for storing audit data"]})]})]})]}),"\n",(0,o.jsx)(n.h3,{id:"optional-configuration-withxxx-methods",children:"Optional Configuration (.withXXX() methods)"}),"\n",(0,o.jsxs)(n.p,{children:["These configurations can be customized via ",(0,o.jsx)(n.code,{children:".withXXX()"})," methods with ",(0,o.jsx)(n.strong,{children:"no global context fallback"}),":"]}),"\n",(0,o.jsxs)(n.table,{children:[(0,o.jsx)(n.thead,{children:(0,o.jsxs)(n.tr,{children:[(0,o.jsx)(n.th,{children:"Configuration"}),(0,o.jsx)(n.th,{children:"Method"}),(0,o.jsx)(n.th,{children:"Default"}),(0,o.jsx)(n.th,{children:"Description"})]})}),(0,o.jsxs)(n.tbody,{children:[(0,o.jsxs)(n.tr,{children:[(0,o.jsx)(n.td,{children:(0,o.jsx)(n.code,{children:"WriteConcern"})}),(0,o.jsx)(n.td,{children:(0,o.jsx)(n.code,{children:".withWriteConcern(concern)"})}),(0,o.jsxs)(n.td,{children:[(0,o.jsx)(n.code,{children:"MAJORITY"})," with journal"]}),(0,o.jsx)(n.td,{children:"Write acknowledgment level"})]}),(0,o.jsxs)(n.tr,{children:[(0,o.jsx)(n.td,{children:(0,o.jsx)(n.code,{children:"ReadConcern"})}),(0,o.jsx)(n.td,{children:(0,o.jsx)(n.code,{children:".withReadConcern(concern)"})}),(0,o.jsx)(n.td,{children:(0,o.jsx)(n.code,{children:"MAJORITY"})}),(0,o.jsx)(n.td,{children:"Read isolation level"})]}),(0,o.jsxs)(n.tr,{children:[(0,o.jsx)(n.td,{children:(0,o.jsx)(n.code,{children:"ReadPreference"})}),(0,o.jsx)(n.td,{children:(0,o.jsx)(n.code,{children:".withReadPreference(pref)"})}),(0,o.jsx)(n.td,{children:(0,o.jsx)(n.code,{children:"PRIMARY"})}),(0,o.jsx)(n.td,{children:"Server selection for reads"})]}),(0,o.jsxs)(n.tr,{children:[(0,o.jsx)(n.td,{children:(0,o.jsx)(n.code,{children:"Audit Repository Name"})}),(0,o.jsx)(n.td,{children:(0,o.jsx)(n.code,{children:".withAuditRepositoryName(name)"})}),(0,o.jsx)(n.td,{children:(0,o.jsx)(n.code,{children:"flamingockAuditLog"})}),(0,o.jsx)(n.td,{children:"Collection name for audit entries"})]}),(0,o.jsxs)(n.tr,{children:[(0,o.jsx)(n.td,{children:(0,o.jsx)(n.code,{children:"Lock Repository Name"})}),(0,o.jsx)(n.td,{children:(0,o.jsx)(n.code,{children:".withLockRepositoryName(name)"})}),(0,o.jsx)(n.td,{children:(0,o.jsx)(n.code,{children:"flamingockLock"})}),(0,o.jsx)(n.td,{children:"Collection name for distributed locks"})]})]})]}),"\n",(0,o.jsxs)(n.p,{children:[(0,o.jsx)(n.strong,{children:"Important"}),": These default values are optimized for maximum consistency and should ideally be left unchanged. Override them only for testing purposes or exceptional cases."]}),"\n",(0,o.jsx)(n.h2,{id:"configuration-example",children:"Configuration example"}),"\n",(0,o.jsx)(n.p,{children:"Here's a comprehensive example showing the configuration:"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-java",children:"// Audit store configuration (mandatory via constructor)\nvar auditStore = new MongoDBSyncAuditStore(mongoClient, auditDatabase)\n    .withWriteConcern(WriteConcern.W1)         // Optional configuration\n    .withReadPreference(ReadPreference.secondary());  // Optional configuration\n\n// Register with Flamingock\nFlamingock.builder()\n    .setAuditStore(auditStore)\n    .addTargetSystems(targetSystems...)\n    .build();\n"})}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.strong,{children:"Audit store configuration resolution:"})}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"MongoClient"}),": Must be provided via constructor"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"MongoDatabase"}),": Must be provided via constructor"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"WriteConcern"}),": Uses explicit configuration instead of default"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"ReadPreference"}),": Uses explicit configuration instead of default"]}),"\n"]}),"\n",(0,o.jsx)(n.p,{children:"This architecture ensures explicit audit store configuration with no fallback dependencies."}),"\n",(0,o.jsx)(n.h2,{id:"next-steps",children:"Next steps"}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:["Learn about ",(0,o.jsx)(n.a,{href:"/docs/target-systems/introduction",children:"Target systems"})]}),"\n",(0,o.jsxs)(n.li,{children:["\ud83d\udc49 See a ",(0,o.jsx)(n.a,{href:"https://github.com/flamingock/flamingock-examples/tree/master/mongodb",children:"full example project"})]}),"\n"]})]})}function x(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(h,{...e})}):h(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>s,x:()=>a});var r=t(6540);const o={},i=r.createContext(o);function s(e){const n=r.useContext(i);return r.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:s(e.components),r.createElement(i.Provider,{value:n},e.children)}},9365:(e,n,t)=>{t.d(n,{A:()=>s});t(6540);var r=t(4164);const o={tabItem:"tabItem_Ymn6"};var i=t(4848);function s({children:e,hidden:n,className:t}){return(0,i.jsx)("div",{role:"tabpanel",className:(0,r.A)(o.tabItem,t),hidden:n,children:e})}}}]);