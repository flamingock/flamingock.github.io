"use strict";(self.webpackChunkflamingock=self.webpackChunkflamingock||[]).push([[5710],{1491:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>o,contentTitle:()=>l,default:()=>h,frontMatter:()=>a,metadata:()=>t,toc:()=>c});const t=JSON.parse('{"id":"get-started/Introduction","title":" ","description":"Flamingock brings Change-as-Code (CaC) to your entire stack.","source":"@site/docs/get-started/Introduction.md","sourceDirName":"get-started","slug":"/get-started/Introduction","permalink":"/get-started/Introduction","draft":false,"unlisted":false,"editUrl":"https://github.com/flamingock/flamingock-java/docs/get-started/Introduction.md","tags":[],"version":"current","sidebarPosition":10,"frontMatter":{"sidebar_position":10,"sidebar_label":"Introduction","title":" "},"sidebar":"tutorialSidebar","previous":{"title":"Overview","permalink":"/overview"},"next":{"title":"Quick start","permalink":"/get-started/quick-start"}}');var i=s(4848),r=s(8453);const a={sidebar_position:10,sidebar_label:"Introduction",title:" "},l="Introduction",o={},c=[{value:"What Flamingock manages",id:"what-flamingock-manages",level:3},{value:"What Flamingock does <em>not</em> manage",id:"what-flamingock-does-not-manage",level:3},{value:"Core principles",id:"core-principles",level:2},{value:"\ud83d\udd12 Safety by default",id:"-safety-by-default",level:3},{value:"\ud83d\udcdd Complete auditability",id:"-complete-auditability",level:3},{value:"\ud83d\udd04 Recovery strategies",id:"-recovery-strategies",level:3},{value:"Target systems",id:"target-systems",level:2},{value:"Architecture overview",id:"architecture-overview",level:2},{value:"Changes",id:"changes",level:3},{value:"Audit store vs target system",id:"audit-store-vs-target-system",level:3},{value:"Execution flow",id:"execution-flow",level:3},{value:"Next steps",id:"next-steps",level:2}];function d(e){const n={a:"a",br:"br",em:"em",h1:"h1",h2:"h2",h3:"h3",header:"header",hr:"hr",li:"li",ol:"ol",p:"p",strong:"strong",ul:"ul",...(0,r.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.header,{children:(0,i.jsx)(n.h1,{id:"introduction",children:"Introduction"})}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Flamingock"})," brings ",(0,i.jsx)(n.em,{children:"Change-as-Code (CaC)"})," to your entire stack.",(0,i.jsx)(n.br,{}),"\n","It applies ",(0,i.jsx)(n.strong,{children:"versioned, auditable changes"})," to the external systems your application depends on \u2014 such as schemas, message brokers, databases, APIs, cloud services, and any other external system your application needs."]}),"\n",(0,i.jsxs)(n.p,{children:["Unlike infrastructure-as-code tools, Flamingock runs ",(0,i.jsx)(n.strong,{children:"inside your application"})," (or via the ",(0,i.jsx)(n.strong,{children:"CLI"}),").",(0,i.jsx)(n.br,{}),"\n","It ensures these systems evolve ",(0,i.jsx)(n.strong,{children:"safely, consistently, and in sync with your code at runtime"}),"."]}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h3,{id:"what-flamingock-manages",children:"What Flamingock manages"}),"\n",(0,i.jsxs)(n.p,{children:["Flamingock focuses on ",(0,i.jsx)(n.strong,{children:"application-level changes"})," that your code requires to run safely:"]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Database schemas and reference data"}),"\n",(0,i.jsx)(n.li,{children:"Message queues and schemas"}),"\n",(0,i.jsx)(n.li,{children:"APIs and configuration values"}),"\n",(0,i.jsx)(n.li,{children:"Cloud service resources directly tied to your application"}),"\n",(0,i.jsx)(n.li,{children:"Configuration changes (feature flags, secrets, runtime values)"}),"\n"]}),"\n",(0,i.jsxs)(n.h3,{id:"what-flamingock-does-not-manage",children:["What Flamingock does ",(0,i.jsx)(n.em,{children:"not"})," manage"]}),"\n",(0,i.jsxs)(n.p,{children:["Flamingock is ",(0,i.jsx)(n.strong,{children:"not an infrastructure-as-code tool"}),". It does not provision servers, clusters, or networks \u2014 those belong in Terraform, Pulumi, or similar. Instead, Flamingock ",(0,i.jsx)(n.strong,{children:"complements them by handling the runtime changes your application depends on"}),"."]}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h2,{id:"core-principles",children:"Core principles"}),"\n",(0,i.jsx)(n.h3,{id:"-safety-by-default",children:"\ud83d\udd12 Safety by default"}),"\n",(0,i.jsx)(n.p,{children:"When Flamingock cannot guarantee a safe outcome, it stops and requires manual intervention. This prevents silent data corruption and ensures predictable deployments."}),"\n",(0,i.jsx)(n.h3,{id:"-complete-auditability",children:"\ud83d\udcdd Complete auditability"}),"\n",(0,i.jsx)(n.p,{children:"Every change execution is tracked in an audit store, providing a complete history of what was applied, when, by whom, and with what result."}),"\n",(0,i.jsx)(n.h3,{id:"-recovery-strategies",children:"\ud83d\udd04 Recovery strategies"}),"\n",(0,i.jsx)(n.p,{children:"Configurable mechanisms determine how Flamingock handles failures:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Manual intervention"})," (default): stops on failure and requires human review"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Always retry"}),": automatically retries idempotent operations"]}),"\n"]}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h2,{id:"target-systems",children:"Target systems"}),"\n",(0,i.jsx)(n.p,{children:"Flamingock can apply changes to any external service your application interacts with. Examples include:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Message brokers"}),": e.g. Kafka, RabbitMQ, AWS SQS"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Cloud services"}),": e.g. S3, Lambda, API Gateway"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Databases"}),": SQL (e.g. PostgreSQL, MySQL) and NoSQL (e.g. MongoDB, DynamoDB)"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"APIs"}),": e.g. REST endpoints, GraphQL schemas"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Configuration systems"}),": e.g. feature flags, vault secrets"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"And any other external system"})," your application needs to evolve"]}),"\n"]}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h2,{id:"architecture-overview",children:"Architecture overview"}),"\n",(0,i.jsx)(n.h3,{id:"changes",children:"Changes"}),"\n",(0,i.jsxs)(n.p,{children:["The fundamental unit of change. Each ",(0,i.jsx)(n.strong,{children:"Change"}),":"]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Has a unique identifier and execution order"}),"\n",(0,i.jsx)(n.li,{children:"Targets a specific system"}),"\n",(0,i.jsx)(n.li,{children:"Contains execution logic (and optionally rollback logic)"}),"\n",(0,i.jsx)(n.li,{children:"Is executed exactly once"}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"audit-store-vs-target-system",children:"Audit store vs target system"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Audit store"})," \u2192 where Flamingock tracks execution history (managed by Flamingock)."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Target system"})," \u2192 where your business changes are applied (any external service your application interacts with)."]}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"execution-flow",children:"Execution flow"}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsx)(n.li,{children:"Application startup (or CLI invocation) triggers Flamingock"}),"\n",(0,i.jsx)(n.li,{children:"Flamingock discovers all Changes"}),"\n",(0,i.jsx)(n.li,{children:"Checks audit store for pending changes"}),"\n",(0,i.jsx)(n.li,{children:"Acquires a distributed lock"}),"\n",(0,i.jsx)(n.li,{children:"Executes changes in order"}),"\n",(0,i.jsx)(n.li,{children:"Records results in the audit store"}),"\n",(0,i.jsx)(n.li,{children:"Handles failures according to the configured recovery strategy"}),"\n"]}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h2,{id:"next-steps",children:"Next steps"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.a,{href:"/get-started/quick-start",children:"Quick start"})," \u2013 minimum setup to run Flamingock"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.a,{href:"/get-started/core-concepts",children:"Core concepts"})," \u2013 detailed explanation of key concepts"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.a,{href:"/changes/introduction",children:"Changes"})," \u2013 anatomy and execution of Changes"]}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(d,{...e})}):d(e)}},8453:(e,n,s)=>{s.d(n,{R:()=>a,x:()=>l});var t=s(6540);const i={},r=t.createContext(i);function a(e){const n=t.useContext(r);return t.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:a(e.components),t.createElement(r.Provider,{value:n},e.children)}}}]);