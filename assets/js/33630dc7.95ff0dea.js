"use strict";(self.webpackChunkflamingock=self.webpackChunkflamingock||[]).push([[4310],{5076:(e,s,n)=>{n.r(s),n.d(s,{assets:()=>l,contentTitle:()=>o,default:()=>h,frontMatter:()=>a,metadata:()=>t,toc:()=>c});const t=JSON.parse('{"id":"overview/audit-store-vs-target-system","title":"Target Systems vs Audit Store","description":"Understanding Flamingock\'s dual-system design for enterprise safety","source":"@site/docs/overview/audit-store-vs-target-system.md","sourceDirName":"overview","slug":"/overview/audit-store-vs-target-system","permalink":"/docs/overview/audit-store-vs-target-system","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/overview/audit-store-vs-target-system.md","tags":[],"version":"current","sidebarPosition":100,"frontMatter":{"title":"Target Systems vs Audit Store","sidebar_position":100},"sidebar":"tutorialSidebar","previous":{"title":"Flamingock Technical Overview","permalink":"/docs/overview/technical-overview"},"next":{"title":"Library Introduction","permalink":"/docs/flamingock-library-config/introduction"}}');var r=n(4848),i=n(8453);const a={title:"Target Systems vs Audit Store",sidebar_position:100},o="Target Systems vs Audit Store",l={},c=[{value:"The Dual-System Architecture",id:"the-dual-system-architecture",level:2},{value:"Target Systems: Where Changes Are Applied",id:"target-systems-where-changes-are-applied",level:3},{value:"Audit Store: Where Execution Is Tracked",id:"audit-store-where-execution-is-tracked",level:3},{value:"Why This Separation Matters",id:"why-this-separation-matters",level:2},{value:"Enterprise Safety Benefits",id:"enterprise-safety-benefits",level:3},{value:"Target System Types",id:"target-system-types",level:2},{value:"Transactional Target Systems",id:"transactional-target-systems",level:3},{value:"Non-Transactional Target Systems",id:"non-transactional-target-systems",level:3},{value:"How It Works",id:"how-it-works",level:2},{value:"Key Takeaways",id:"key-takeaways",level:2},{value:"For Developers",id:"for-developers",level:3},{value:"For Architects",id:"for-architects",level:3},{value:"For Operations",id:"for-operations",level:3}];function d(e){const s={a:"a",code:"code",em:"em",h1:"h1",h2:"h2",h3:"h3",header:"header",hr:"hr",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,i.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(s.header,{children:(0,r.jsx)(s.h1,{id:"target-systems-vs-audit-store",children:"Target Systems vs Audit Store"})}),"\n",(0,r.jsx)(s.p,{children:(0,r.jsx)(s.em,{children:"Understanding Flamingock's dual-system design for enterprise safety"})}),"\n",(0,r.jsx)(s.p,{children:"Flamingock's architecture separates business changes from execution tracking through two distinct system types. This separation is fundamental to Flamingock's safety guarantees and competitive advantages."}),"\n",(0,r.jsx)(s.hr,{}),"\n",(0,r.jsx)(s.h2,{id:"the-dual-system-architecture",children:"The Dual-System Architecture"}),"\n",(0,r.jsx)(s.h3,{id:"target-systems-where-changes-are-applied",children:"Target Systems: Where Changes Are Applied"}),"\n",(0,r.jsxs)(s.p,{children:[(0,r.jsx)(s.strong,{children:"Target Systems"})," are your business systems where actual changes happen:"]}),"\n",(0,r.jsxs)(s.ul,{children:["\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.strong,{children:"Examples"}),": User database, Product catalog, Order management system, Kafka topics, S3 buckets, REST APIs"]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.strong,{children:"Purpose"}),": Store and process your business data and configurations"]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.strong,{children:"Modified by"}),": Your business logic through ChangeUnits"]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.strong,{children:"Configuration"}),": See ",(0,r.jsx)(s.a,{href:"/docs/flamingock-library-config/target-system-configuration",children:"Target System Configuration"})," for technical setup"]}),"\n"]}),"\n",(0,r.jsx)(s.h3,{id:"audit-store-where-execution-is-tracked",children:"Audit Store: Where Execution Is Tracked"}),"\n",(0,r.jsxs)(s.p,{children:[(0,r.jsx)(s.strong,{children:"Audit Store"})," is Flamingock's dedicated system for tracking what happened:"]}),"\n",(0,r.jsxs)(s.ul,{children:["\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.strong,{children:"Examples"}),": Flamingock Cloud backend or dedicated audit table/collection in the user's database."]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.strong,{children:"Purpose"}),": Record execution history, compliance data, issue tracking"]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.strong,{children:"Modified by"}),": Flamingock framework automatically (never your code)"]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.strong,{children:"Configuration"}),": See ",(0,r.jsx)(s.a,{href:"/docs/flamingock-library-config/audit-store-configuration",children:"Audit Store Configuration"})," for technical setup"]}),"\n"]}),"\n",(0,r.jsx)(s.hr,{}),"\n",(0,r.jsx)(s.h2,{id:"why-this-separation-matters",children:"Why This Separation Matters"}),"\n",(0,r.jsx)(s.h3,{id:"enterprise-safety-benefits",children:"Enterprise Safety Benefits"}),"\n",(0,r.jsxs)(s.ol,{children:["\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.strong,{children:"Complete Audit Trail"}),": Every change attempt is recorded regardless of business system failures"]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.strong,{children:"Governance Separation"}),": Business data and compliance data have different access patterns"]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.strong,{children:"Recovery Capabilities"}),": Operations team can resolve issues by reading audit state, not business data"]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.strong,{children:"Compliance Independence"}),": Audit integrity is maintained even during business system issues"]}),"\n"]}),"\n",(0,r.jsx)(s.hr,{}),"\n",(0,r.jsx)(s.h2,{id:"target-system-types",children:"Target System Types"}),"\n",(0,r.jsx)(s.h3,{id:"transactional-target-systems",children:"Transactional Target Systems"}),"\n",(0,r.jsx)(s.p,{children:"Systems with native ACID transaction support (PostgreSQL, MySQL, MongoDB 4.0+):"}),"\n",(0,r.jsx)(s.p,{children:(0,r.jsx)(s.strong,{children:"Safety and Coordination:"})}),"\n",(0,r.jsxs)(s.ul,{children:["\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.strong,{children:"Community Edition"}),": Reliable execution tracking and recovery capabilities"]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.strong,{children:"Cloud Edition"}),": Advanced coordination protocols ensure complete recoverability"]}),"\n"]}),"\n",(0,r.jsx)(s.h3,{id:"non-transactional-target-systems",children:"Non-Transactional Target Systems"}),"\n",(0,r.jsx)(s.p,{children:"Systems without native transaction support (Kafka, S3, REST APIs, File Systems):"}),"\n",(0,r.jsx)(s.p,{children:(0,r.jsx)(s.strong,{children:"Safety and Coordination:"})}),"\n",(0,r.jsxs)(s.ul,{children:["\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.strong,{children:"Community Edition"}),": Reliable execution tracking and rollback-based recovery"]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.strong,{children:"Cloud Edition"}),": Enhanced recoverability with custom validation options"]}),"\n"]}),"\n",(0,r.jsx)(s.hr,{}),"\n",(0,r.jsx)(s.h2,{id:"how-it-works",children:"How It Works"}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{children:"     Your ChangeUnits:\n     \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n     \u2502 1. Change[UpdateKafkaSchema] \u2192 Target System[Kafka Schema Registry]      \u2502\n     \u2502 2. Change[SeedKafkaEvents]   \u2192 Target System[Kafka Topics]               \u2502\n     \u2502 3. Change[AddUserStatus]     \u2192 Target System[User Database]              \u2502\n     \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n                                \u2502\n                                \u25bc\n                    \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n                    \u2502      Flamingock       \u2502\n                    \u2502    (Orchestrator)     \u2502\n                    \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n                                \u2502\n                                \u2502 Executes sequentially\n                                \u2502\n                 ChangeUnit #1  \u2502\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n            (UpdateKafkaSchema) \u2502                           \u2502\n                                \u2502                           \u2502\n                                \u2502             \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n                                \u2502             \u25bc                          \u25bc\n                                \u2502     \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510      \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n                                \u2502     \u2502   Target System:    \u2502      \u2502 Audit Store  \u2502\n                                \u2502     \u2502 \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510 \u2502      \u2502              \u2502\n                                \u2502     \u2502 \u2502 Schema Registry \u2502 \u2502      \u2502   Records:   \u2502\n                                \u2502     \u2502 \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518 \u2502      \u2502 #1 applied   \u2502\n                                \u2502     \u2502  (applies change)   \u2502      \u2502              \u2502\n                                \u2502     \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518      \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n                                \u2502\n                                \u2502\n                  ChangeUnit #2 \u2502\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n              (SeedKafkaEvents) \u2502                           \u2502\n                                \u2502                           \u2502\n                                \u2502             \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n                                \u2502             \u25bc                          \u25bc\n                                \u2502     \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510      \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n                                \u2502     \u2502   Target System:    \u2502      \u2502 Audit Store  \u2502\n                                \u2502     \u2502 \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510 \u2502      \u2502              \u2502\n                                \u2502     \u2502 \u2502  Kafka Topics   \u2502 \u2502      \u2502   Records:   \u2502\n                                \u2502     \u2502 \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518 \u2502      \u2502 #2 applied   \u2502\n                                \u2502     \u2502  (applies change)   \u2502      \u2502              \u2502\n                                \u2502     \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518      \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n                                \u2502\n                                \u2502\n                  ChangeUnit #3 \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n                (AddUserStatus)                             \u2502\n                                                            \u2502\n                                              \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n                                              \u25bc                          \u25bc\n                                      \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510      \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n                                      \u2502   Target System:    \u2502      \u2502 Audit Store  \u2502\n                                      \u2502 \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510 \u2502      \u2502              \u2502\n                                      \u2502 \u2502  User Database  \u2502 \u2502      \u2502   Records:   \u2502\n                                      \u2502 \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518 \u2502      \u2502 #3 applied   \u2502\n                                      \u2502  (applies change)   \u2502      \u2502              \u2502\n                                      \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518      \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n                                \n"})}),"\n",(0,r.jsx)(s.p,{children:(0,r.jsx)(s.strong,{children:"The Flow:"})}),"\n",(0,r.jsxs)(s.ol,{children:["\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.strong,{children:"You create ChangeUnits"})," - Define what changes need to happen"]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.strong,{children:"Flamingock orchestrates"})," - Safely applies changes across all your systems"]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.strong,{children:"Target systems evolve"})," - Your business systems get updated"]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.strong,{children:"Audit store tracks everything"})," - Complete history for compliance and recovery"]}),"\n"]}),"\n",(0,r.jsx)(s.hr,{}),"\n",(0,r.jsx)(s.h2,{id:"key-takeaways",children:"Key Takeaways"}),"\n",(0,r.jsx)(s.h3,{id:"for-developers",children:"For Developers"}),"\n",(0,r.jsxs)(s.ul,{children:["\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.strong,{children:"Target Systems"}),": Where your business logic runs and makes changes"]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.strong,{children:"Audit Store"}),": Automatically managed by Flamingock for tracking and compliance"]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.strong,{children:"Implementation"}),": See ",(0,r.jsx)(s.a,{href:"/docs/flamingock-library-config/target-system-configuration",children:"Target System Configuration"})," and ",(0,r.jsx)(s.a,{href:"/docs/flamingock-library-config/audit-store-configuration",children:"Audit Store Configuration"})]}),"\n"]}),"\n",(0,r.jsx)(s.h3,{id:"for-architects",children:"For Architects"}),"\n",(0,r.jsxs)(s.ul,{children:["\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.strong,{children:"Clean Separation"}),": Business logic separated from execution tracking"]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.strong,{children:"Enterprise Scalability"}),": Architecture supports compliance, governance, multi-environment"]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.strong,{children:"Flexibility"}),": Works with any target system type (transactional, non-transactional, hybrid)"]}),"\n"]}),"\n",(0,r.jsx)(s.h3,{id:"for-operations",children:"For Operations"}),"\n",(0,r.jsxs)(s.ul,{children:["\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.strong,{children:"Issue Resolution"}),": Tools operate on audit store, you fix target systems"]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.strong,{children:"Compliance"}),": Complete audit trail independent of business system availability"]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.strong,{children:"Recovery"}),": Always know the state, even during complex failure scenarios"]}),"\n"]}),"\n",(0,r.jsxs)(s.p,{children:[(0,r.jsx)(s.strong,{children:"Bottom Line"}),": This dual-system architecture is what enables Flamingock to provide enterprise-grade safety and governance capabilities that traditional tools cannot match."]})]})}function h(e={}){const{wrapper:s}={...(0,i.R)(),...e.components};return s?(0,r.jsx)(s,{...e,children:(0,r.jsx)(d,{...e})}):d(e)}},8453:(e,s,n)=>{n.d(s,{R:()=>a,x:()=>o});var t=n(6540);const r={},i=t.createContext(r);function a(e){const s=t.useContext(i);return t.useMemo(function(){return"function"==typeof e?e(s):{...s,...e}},[s,e])}function o(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:a(e.components),t.createElement(i.Provider,{value:s},e.children)}}}]);