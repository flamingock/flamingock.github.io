"use strict";(self.webpackChunkflamingock=self.webpackChunkflamingock||[]).push([[9350],{4761:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>l,contentTitle:()=>c,default:()=>h,frontMatter:()=>r,metadata:()=>i,toc:()=>d});const i=JSON.parse('{"id":"changes/anatomy-and-structure","title":"Anatomy & Structure","description":"Every Change is configured through key components that work together, following the natural development workflow:","source":"@site/docs/changes/anatomy-and-structure.md","sourceDirName":"changes","slug":"/changes/anatomy-and-structure","permalink":"/docs/changes/anatomy-and-structure","draft":false,"unlisted":false,"editUrl":"https://github.com/flamingock/flamingock-java/docs/changes/anatomy-and-structure.md","tags":[],"version":"current","sidebarPosition":2,"frontMatter":{"title":"Anatomy & Structure","sidebar_position":2},"sidebar":"tutorialSidebar","previous":{"title":"Introduction","permalink":"/docs/changes/introduction"},"next":{"title":"Transactions","permalink":"/docs/changes/transactions"}}');var t=s(4848),a=s(8453);const r={title:"Anatomy & Structure",sidebar_position:2},c="Change Anatomy & Structure",l={},d=[{value:"Complete example",id:"complete-example",level:2},{value:"File name and order",id:"file-name-and-order",level:2},{value:"File naming pattern",id:"file-naming-pattern",level:3},{value:"How Flamingock extracts order",id:"how-flamingock-extracts-order",level:3},{value:"Change annotation properties",id:"change-annotation-properties",level:2},{value:"<code>id</code> - Unique identifier",id:"id---unique-identifier",level:3},{value:"<code>author</code> - Responsibility tracking",id:"author---responsibility-tracking",level:3},{value:"Target system annotation",id:"target-system-annotation",level:2},{value:"<code>@TargetSystem</code> - System specification",id:"targetsystem---system-specification",level:3},{value:"Apply and rollback methods",id:"apply-and-rollback-methods",level:2},{value:"<code>@Apply</code> - Change logic",id:"apply---change-logic",level:3},{value:"<code>@Rollback</code> - Undo logic",id:"rollback---undo-logic",level:3},{value:"Method implementation guide",id:"method-implementation-guide",level:3},{value:"Method parameters and dependency injection",id:"method-parameters-and-dependency-injection",level:2},{value:"Change Execution Dependency Resolution",id:"change-execution-dependency-resolution",level:3},{value:"Key Benefits of This Architecture",id:"key-benefits-of-this-architecture",level:3},{value:"Optional properties",id:"optional-properties",level:2},{value:"<code>transactional</code> - Transaction behavior",id:"transactional---transaction-behavior",level:3},{value:"<code>recovery</code> - Failure handling strategy",id:"recovery---failure-handling-strategy",level:3},{value:"Next steps",id:"next-steps",level:2}];function o(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,a.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.header,{children:(0,t.jsx)(n.h1,{id:"change-anatomy--structure",children:"Change Anatomy & Structure"})}),"\n",(0,t.jsx)(n.p,{children:"Every Change is configured through key components that work together, following the natural development workflow:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:(0,t.jsx)(n.a,{href:"#file-name-and-order",children:"File name"})}),": Created first, determines execution order and change name."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:(0,t.jsxs)(n.a,{href:"#change-annotation-properties",children:[(0,t.jsx)(n.code,{children:"@Change"})," annotation"]})}),": Defines the Change's unique identifier (",(0,t.jsx)(n.code,{children:"id"}),") and author for accountability."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:(0,t.jsxs)(n.a,{href:"#target-system-annotation",children:[(0,t.jsx)(n.code,{children:"@TargetSystem"})," annotation"]})}),": Specifies which system the Change will affect."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:(0,t.jsx)(n.a,{href:"#apply-and-rollback-methods",children:"Apply and rollback methods"})}),": Implement the actual change logic."]}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:"Understanding this anatomy is essential for creating reliable changes that execute predictably and safely."}),"\n",(0,t.jsx)(n.h2,{id:"complete-example",children:"Complete example"}),"\n",(0,t.jsx)(n.p,{children:"Here's what a complete Change looks like with minimal configuration - we'll explain each component in detail below:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-java",children:'@TargetSystem("user-database")\n@Change(id = "add-user-status", author = "backend-team")\npublic class _0001__AddUserStatus {\n\n    @Apply\n    public void apply(MongoDatabase database) {\n        database.getCollection("users")\n                .updateMany(\n                    new Document("status", new Document("$exists", false)),\n                    new Document("$set", new Document("status", "active"))\n                );\n    }\n\n    @Rollback\n    public void rollback(MongoDatabase database) {\n        database.getCollection("users")\n                .updateMany(\n                    new Document(),\n                    new Document("$unset", new Document("status", ""))\n                );\n    }\n}\n'})}),"\n",(0,t.jsx)(n.p,{children:"Now let's break down each component:"}),"\n",(0,t.jsx)(n.h2,{id:"file-name-and-order",children:"File name and order"}),"\n",(0,t.jsxs)(n.p,{children:["The execution order of Changes is determined by the filename pattern. Every Change file must follow the ",(0,t.jsx)(n.code,{children:"_ORDER__CHANGE-NAME"})," format."]}),"\n",(0,t.jsx)(n.h3,{id:"file-naming-pattern",children:"File naming pattern"}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Pattern"}),": ",(0,t.jsx)(n.code,{children:"_ORDER__CHANGE-NAME.[java|yaml]"})]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"ORDER"}),": Alphanumeric string (required: at least 4 characters, left-padded zeros)"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsxs)(n.strong,{children:["Double underscore ",(0,t.jsx)(n.code,{children:"__"})]}),": Separates order from change name"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"CHANGE-NAME"}),": PascalCase descriptive name"]}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Examples:"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{children:"_0001__CreateInvoiceCollection.java\n_0002__AddUserStatusColumn.yaml\n_0003__MigrateUserData.java\n_0010__OptimizeQueries.java\n"})}),"\n",(0,t.jsx)(n.h3,{id:"how-flamingock-extracts-order",children:"How Flamingock extracts order"}),"\n",(0,t.jsx)(n.p,{children:"Flamingock uses a simple rule to determine execution order:"}),"\n",(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsx)(n.li,{children:(0,t.jsxs)(n.strong,{children:["Filename must start with underscore ",(0,t.jsx)(n.code,{children:"_"})]})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsxs)(n.strong,{children:["Everything between the first ",(0,t.jsx)(n.code,{children:"_"})," and ",(0,t.jsx)(n.code,{children:"__"})," (double underscore) becomes the order"]})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsxs)(n.strong,{children:["Everything after ",(0,t.jsx)(n.code,{children:"__"})," is the descriptive name"]})}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Name examples:"})}),"\n",(0,t.jsxs)(n.table,{children:[(0,t.jsx)(n.thead,{children:(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.th,{children:"Filename"}),(0,t.jsx)(n.th,{children:"Extracted Order"}),(0,t.jsx)(n.th,{children:"Change Name"})]})}),(0,t.jsxs)(n.tbody,{children:[(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"_0001__CreateUsers.java"})}),(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"0001"})}),(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"CreateUsers"})})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"_0010__SimpleChange.yaml"})}),(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"0010"})}),(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"SimpleChange"})})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"_V1_2__DatabaseUpgrade.java"})}),(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"V1_2"})}),(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"DatabaseUpgrade"})})]})]})]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Order rules:"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Required"}),": Orders must be at least 4 characters (compilation requirement)"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Recommended format"}),": ",(0,t.jsx)(n.code,{children:"NNNN"})," with left-padding zeros (e.g., ",(0,t.jsx)(n.code,{children:"0001"}),", ",(0,t.jsx)(n.code,{children:"0002"}),", ",(0,t.jsx)(n.code,{children:"0010"}),")"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Flexibility"}),": Can contain any characters valid for OS filenames and Java class names"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Evaluation"}),": Orders are compared alphanumerically for execution sequence"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Immutability"}),": Cannot be changed once deployed"]}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"change-annotation-properties",children:"Change annotation properties"}),"\n",(0,t.jsxs)(n.p,{children:["The ",(0,t.jsx)(n.code,{children:"@Change"})," annotation must define these two properties, with optional properties available (covered later):"]}),"\n",(0,t.jsxs)(n.h3,{id:"id---unique-identifier",children:[(0,t.jsx)(n.code,{children:"id"})," - Unique identifier"]}),"\n",(0,t.jsxs)(n.p,{children:["The ",(0,t.jsx)(n.code,{children:"id"})," must be unique across all Changes in your application."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-java",children:'@Change(id = "add-user-status", author = "dev-team")\n'})}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Rules:"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Must be unique application-wide"}),"\n",(0,t.jsxs)(n.li,{children:["Use descriptive names (e.g., ",(0,t.jsx)(n.code,{children:"add-user-status"}),", not ",(0,t.jsx)(n.code,{children:"change1"}),")"]}),"\n",(0,t.jsx)(n.li,{children:"Cannot be modified once deployed"}),"\n"]}),"\n",(0,t.jsxs)(n.h3,{id:"author---responsibility-tracking",children:[(0,t.jsx)(n.code,{children:"author"})," - Responsibility tracking"]}),"\n",(0,t.jsx)(n.p,{children:"Identifies who is responsible for this change."}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-java",children:'@Change(id = "update-schema", author = "database-team")\n@Change(id = "migrate-users", author = "john.doe@company.com")\n'})}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Best practices:"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["Use team names for shared responsibility: ",(0,t.jsx)(n.code,{children:"database-team"}),", ",(0,t.jsx)(n.code,{children:"api-team"})]}),"\n",(0,t.jsxs)(n.li,{children:["Use individual emails for personal changes: ",(0,t.jsx)(n.code,{children:"john.doe@company.com"})]}),"\n",(0,t.jsx)(n.li,{children:"Keep consistent within your organization"}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"target-system-annotation",children:"Target system annotation"}),"\n",(0,t.jsxs)(n.h3,{id:"targetsystem---system-specification",children:[(0,t.jsx)(n.code,{children:"@TargetSystem"})," - System specification"]}),"\n",(0,t.jsx)(n.p,{children:"Declares which target system this Change affects."}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-java",children:'@TargetSystem("user-database")\n@Change(id = "add-user-fields", author = "api-team")\npublic class _0001__AddUserFields {\n    // Implementation\n}\n'})}),"\n",(0,t.jsx)(n.h2,{id:"apply-and-rollback-methods",children:"Apply and rollback methods"}),"\n",(0,t.jsx)(n.p,{children:"Both methods implement your change logic and use dependency injection to access the systems they need to modify."}),"\n",(0,t.jsxs)(n.h3,{id:"apply---change-logic",children:[(0,t.jsx)(n.code,{children:"@Apply"})," - Change logic"]}),"\n",(0,t.jsx)(n.p,{children:"Contains the actual change implementation."}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-java",children:'@Apply\npublic void apply(MongoDatabase database, ClientSession session) {\n    // Your change logic here\n    database.getCollection("users")\n            .updateMany(\n                new Document("status", new Document("$exists", false)),\n                new Document("$set", new Document("status", "active"))\n            );\n}\n'})}),"\n",(0,t.jsxs)(n.h3,{id:"rollback---undo-logic",children:[(0,t.jsx)(n.code,{children:"@Rollback"})," - Undo logic"]}),"\n",(0,t.jsx)(n.p,{children:"Provides logic to reverse the change, essential for safety and CLI undo operations."}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-java",children:'@Rollback\npublic void rollback(MongoDatabase database, ClientSession session) {\n    // Undo the change\n    database.getCollection("users")\n            .updateMany(\n                new Document(),\n                new Document("$unset", new Document("status", ""))\n            );\n}\n'})}),"\n",(0,t.jsx)(n.h3,{id:"method-implementation-guide",children:"Method implementation guide"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Method characteristics:"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Must be public"}),"\n",(0,t.jsxs)(n.li,{children:["Can have any name (",(0,t.jsx)(n.code,{children:"execute"}),", ",(0,t.jsx)(n.code,{children:"run"}),", ",(0,t.jsx)(n.code,{children:"apply"}),", etc.)"]}),"\n",(0,t.jsx)(n.li,{children:"Should contain idempotent operations when possible"}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Parameters you can expect:"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Target system dependencies"}),": ",(0,t.jsx)(n.code,{children:"MongoDatabase"}),", ",(0,t.jsx)(n.code,{children:"DataSource"}),", ",(0,t.jsx)(n.code,{children:"S3Client"}),", ",(0,t.jsx)(n.code,{children:"KafkaTemplate"}),", etc."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Transaction context"}),": ",(0,t.jsx)(n.code,{children:"ClientSession"})," (MongoDB), ",(0,t.jsx)(n.code,{children:"Connection"})," (SQL), transaction builders (DynamoDB)"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Custom dependencies"}),": Any beans or objects you've configured in your target system"]}),"\n"]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Method parameters are automatically injected"})," by Flamingock based on your target system configuration and global dependencies."]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Why rollback is required:"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Non-transactional systems"}),": Used automatically if execution fails"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"All systems"}),": Required for CLI/UI undo operations"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Safety"}),": Ensures every change can be reversed"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Governance"}),": Demonstrates you've thought through the change impact"]}),"\n"]}),"\n",(0,t.jsxs)(n.p,{children:["For detailed information about dependency injection and parameter configuration, see ",(0,t.jsx)(n.a,{href:"./dependency-injection.md",children:"Method Parameters and Dependency Injection"}),"."]}),"\n",(0,t.jsx)(n.h2,{id:"method-parameters-and-dependency-injection",children:"Method parameters and dependency injection"}),"\n",(0,t.jsxs)(n.p,{children:["Changes receive dependencies through method parameters, automatically injected by Flamingock using a ",(0,t.jsx)(n.strong,{children:"flexible, multi-source approach"})," with fallback hierarchy."]}),"\n",(0,t.jsx)(n.h3,{id:"change-execution-dependency-resolution",children:"Change Execution Dependency Resolution"}),"\n",(0,t.jsx)(n.p,{children:"Change execution uses a flexible dependency resolution flow(in this priority order):"}),"\n",(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Target system context"})," - dependencies from ",(0,t.jsx)(n.strong,{children:"constructor"})," + ",(0,t.jsx)(n.code,{children:".withXXX()"})," methods"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Target system additional dependencies"})," - added via ",(0,t.jsx)(n.code,{children:".addDependency()"})," or ",(0,t.jsx)(n.code,{children:".setProperty()"})]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Global context"})," (fallback) - shared dependencies available to all target systems"]}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"key-benefits-of-this-architecture",children:"Key Benefits of This Architecture"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Target system isolation"}),": Each target system has its own dependency context"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Flexible fallback"}),": Changes can access both system-specific and shared dependencies"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Clear precedence"}),": Target system dependencies always override global ones"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Type safety"}),": Strongly typed dependency injection with compile-time checking"]}),"\n"]}),"\n",(0,t.jsxs)(n.p,{children:["For complete details on target system configuration vs change execution dependencies, see ",(0,t.jsx)(n.a,{href:"/docs/target-systems/introduction#dependency-injection",children:"Target Systems Introduction"}),"."]}),"\n",(0,t.jsx)(n.h2,{id:"optional-properties",children:"Optional properties"}),"\n",(0,t.jsxs)(n.p,{children:["The ",(0,t.jsx)(n.code,{children:"@Change"})," annotation supports additional optional properties to control behavior:"]}),"\n",(0,t.jsxs)(n.h3,{id:"transactional---transaction-behavior",children:[(0,t.jsx)(n.code,{children:"transactional"})," - Transaction behavior"]}),"\n",(0,t.jsxs)(n.p,{children:["Controls whether the change runs within a transaction (default: ",(0,t.jsx)(n.code,{children:"true"}),")."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-java",children:'@Change(\n    id = "create-large-index",\n    author = "db-team",\n    transactional = false  // DDL operations may require this\n)\n'})}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Important:"})," For non-transactional target systems (S3, Kafka, etc.), this flag has no effect."]}),"\n",(0,t.jsxs)(n.h3,{id:"recovery---failure-handling-strategy",children:[(0,t.jsx)(n.code,{children:"recovery"})," - Failure handling strategy"]}),"\n",(0,t.jsxs)(n.p,{children:["Controls how Flamingock handles execution failures (default: ",(0,t.jsx)(n.code,{children:"MANUAL_INTERVENTION"}),")."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-java",children:'// Default behavior (manual intervention)\n@Change(id = "critical-change", author = "team")\npublic class _0001__CriticalChange {\n    // Execution stops on failure, requires manual resolution\n}\n\n// Automatic retry\n@Recovery(strategy = RecoveryStrategy.ALWAYS_RETRY)\n@Change(id = "idempotent-change", author = "team")\npublic class _0002__IdempotentChange {\n    // Automatically retries on failure until successful\n}\n'})}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Recovery strategies:"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"MANUAL_INTERVENTION"})," (default): Stops execution on failure, requires CLI resolution"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"ALWAYS_RETRY"}),": Automatically retries on subsequent executions until successful"]}),"\n"]}),"\n",(0,t.jsxs)(n.p,{children:["For detailed information on recovery strategies, see ",(0,t.jsx)(n.a,{href:"/docs/safety-and-recovery/introduction",children:"Safety and Recovery"}),"."]}),"\n",(0,t.jsx)(n.h2,{id:"next-steps",children:"Next steps"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:(0,t.jsx)(n.a,{href:"./types-and-implementation",children:"Change types & implementation"})})," - Deep dive into code-based vs template-based approaches"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:(0,t.jsx)(n.a,{href:"./best-practices",children:"Change best practices"})})," - Learn proven patterns for reliable Changes"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:(0,t.jsx)(n.a,{href:"../target-systems/introduction",children:"Target systems"})})," - Configure where your changes will be applied"]}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,a.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(o,{...e})}):o(e)}},8453:(e,n,s)=>{s.d(n,{R:()=>r,x:()=>c});var i=s(6540);const t={},a=i.createContext(t);function r(e){const n=i.useContext(a);return i.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:r(e.components),i.createElement(a.Provider,{value:n},e.children)}}}]);