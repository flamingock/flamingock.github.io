"use strict";(self.webpackChunkflamingock=self.webpackChunkflamingock||[]).push([[849],{6164:e=>{e.exports=JSON.parse('{"version":{"pluginId":"default","version":"current","label":"1.0.0","banner":null,"badge":false,"noIndex":false,"className":"docs-version-current","isLast":true,"docsSidebars":{"tutorialSidebar":[{"type":"html","value":"<hr class=\\"sidebar-divider\\" />"},{"type":"html","value":"<div class=\\"sidebar-contents-header\\">Getting Started</div>"},{"type":"link","label":"Get started","href":"/docs/getting-started/get-started","docId":"getting-started/get-started","unlisted":false},{"type":"link","label":"How it works?","href":"/docs/getting-started/how-it-works","docId":"getting-started/how-it-works","unlisted":false},{"type":"html","value":"<hr class=\\"sidebar-divider\\" />"},{"type":"html","value":"<div class=\\"sidebar-contents-header\\">Overview</div>"},{"type":"link","label":"Introduction to Flamingock","href":"/docs/overview/Introduction","docId":"overview/Introduction","unlisted":false},{"type":"link","label":"Change-as-Code (CaC)","href":"/docs/overview/Change-as-Code","docId":"overview/Change-as-Code","unlisted":false},{"type":"link","label":"Key features","href":"/docs/overview/key-features","docId":"overview/key-features","unlisted":false},{"type":"link","label":"Flamingock editions","href":"/docs/overview/Editions","docId":"overview/Editions","unlisted":false},{"type":"link","label":"Core concepts","href":"/docs/overview/core-concepts","docId":"overview/core-concepts","unlisted":false},{"type":"link","label":"Flamingock Technical Overview","href":"/docs/overview/technical-overview","docId":"overview/technical-overview","unlisted":false},{"type":"link","label":"Target systems vs audit store","href":"/docs/overview/audit-store-vs-target-system","docId":"overview/audit-store-vs-target-system","unlisted":false},{"type":"html","value":"<hr class=\\"sidebar-divider\\" />"},{"type":"html","value":"<div class=\\"sidebar-contents-header\\">Flamingock library configuration</div>"},{"type":"link","label":"Introduction","href":"/docs/flamingock-library-config/introduction","docId":"flamingock-library-config/introduction","unlisted":false},{"type":"link","label":"Setup & Stages","href":"/docs/flamingock-library-config/setup-and-stages","docId":"flamingock-library-config/setup-and-stages","unlisted":false},{"type":"link","label":"Context and dependencies","href":"/docs/flamingock-library-config/context-and-dependencies","docId":"flamingock-library-config/context-and-dependencies","unlisted":false},{"type":"link","label":"Lock","href":"/docs/flamingock-library-config/lock","docId":"flamingock-library-config/lock","unlisted":false},{"type":"link","label":"Transactions","href":"/docs/flamingock-library-config/transactions","docId":"flamingock-library-config/transactions","unlisted":false},{"type":"link","label":"Additional configuration","href":"/docs/flamingock-library-config/additional-configuration","docId":"flamingock-library-config/additional-configuration","unlisted":false},{"type":"link","label":"Events","href":"/docs/flamingock-library-config/events","docId":"flamingock-library-config/events","unlisted":false},{"type":"html","value":"<hr class=\\"sidebar-divider\\" />"},{"type":"html","value":"<div class=\\"sidebar-contents-header\\">ChangeUnits</div>"},{"type":"link","label":"Introduction","href":"/docs/change-units/introduction","docId":"change-units/introduction","unlisted":false},{"type":"link","label":"Anatomy & Structure","href":"/docs/change-units/anatomy-and-structure","docId":"change-units/anatomy-and-structure","unlisted":false},{"type":"link","label":"Types & Implementation","href":"/docs/change-units/types-and-implementation","docId":"change-units/types-and-implementation","unlisted":false},{"type":"link","label":"Best Practices","href":"/docs/change-units/best-practices","docId":"change-units/best-practices","unlisted":false},{"type":"html","value":"<hr class=\\"sidebar-divider\\" />"},{"type":"html","value":"<div class=\\"sidebar-contents-header\\">Target Systems</div>"},{"type":"link","label":"Introduction","href":"/docs/target-systems/introduction","docId":"target-systems/introduction","unlisted":false},{"type":"link","label":"MongoDB Sync","href":"/docs/target-systems/mongodb-target-system","docId":"target-systems/mongodb-target-system","unlisted":false},{"type":"link","label":"MongoDB Spring Data","href":"/docs/target-systems/mongodb-springdata-target-system","docId":"target-systems/mongodb-springdata-target-system","unlisted":false},{"type":"link","label":"SQL","href":"/docs/target-systems/sql-target-system","docId":"target-systems/sql-target-system","unlisted":false},{"type":"link","label":"DynamoDB","href":"/docs/target-systems/dynamodb-target-system","docId":"target-systems/dynamodb-target-system","unlisted":false},{"type":"link","label":"Couchbase","href":"/docs/target-systems/couchbase-target-system","docId":"target-systems/couchbase-target-system","unlisted":false},{"type":"link","label":"Default (Non-transactional)","href":"/docs/target-systems/default-target-system","docId":"target-systems/default-target-system","unlisted":false},{"type":"html","value":"<hr class=\\"sidebar-divider\\" />"},{"type":"html","value":"<div class=\\"sidebar-contents-header\\">Audit Stores</div>"},{"type":"link","label":"Introduction","href":"/docs/audit-stores/introduction","docId":"audit-stores/introduction","unlisted":false},{"type":"category","label":"Community audit stores","collapsible":false,"collapsed":false,"items":[{"type":"link","label":"MongoDB","href":"/docs/audit-stores/community/mongodb-audit-store","docId":"audit-stores/community/mongodb-audit-store","unlisted":false},{"type":"link","label":"MongoDB Spring Data","href":"/docs/audit-stores/community/mongodb-springdata-audit-store","docId":"audit-stores/community/mongodb-springdata-audit-store","unlisted":false},{"type":"link","label":"DynamoDB","href":"/docs/audit-stores/community/dynamodb-audit-store","docId":"audit-stores/community/dynamodb-audit-store","unlisted":false},{"type":"link","label":"Couchbase","href":"/docs/audit-stores/community/couchbase-audit-store","docId":"audit-stores/community/couchbase-audit-store","unlisted":false}]},{"type":"html","value":"<hr class=\\"sidebar-divider\\" />"},{"type":"html","value":"<div class=\\"sidebar-contents-header\\">Cloud Edition</div>"},{"type":"link","label":"Cloud edition (coming soon)","href":"/docs/cloud-edition/","docId":"cloud-edition/cloud-edition","unlisted":false},{"type":"html","value":"<hr class=\\"sidebar-divider\\" />"},{"type":"html","value":"<div class=\\"sidebar-contents-header\\">Templates</div>"},{"type":"link","label":"Templates Introduction","href":"/docs/templates/templates-introduction","docId":"templates/templates-introduction","unlisted":false},{"type":"link","label":"How to use Templates","href":"/docs/templates/templates-how-to-use","docId":"templates/templates-how-to-use","unlisted":false},{"type":"link","label":"Create your template","href":"/docs/templates/create-your-own-template","docId":"templates/create-your-own-template","unlisted":false},{"type":"link","label":"Template mapping","href":"/docs/templates/template-mapping-section","docId":"templates/template-mapping-section","unlisted":false},{"type":"html","value":"<hr class=\\"sidebar-divider\\" />"},{"type":"html","value":"<div class=\\"sidebar-contents-header\\">Supported frameworks</div>"},{"type":"category","label":"Springboot","collapsible":false,"collapsed":false,"items":[{"type":"link","label":"Automatic Setup","href":"/docs/frameworks/springboot-integration/enable-flamingock-setup","docId":"frameworks/springboot-integration/enable-flamingock-setup","unlisted":false},{"type":"link","label":"Builder-based (manual)","href":"/docs/frameworks/springboot-integration/builder-based-setup","docId":"frameworks/springboot-integration/builder-based-setup","unlisted":false},{"type":"link","label":"Profiles","href":"/docs/frameworks/springboot-integration/profiles","docId":"frameworks/springboot-integration/profiles","unlisted":false}],"href":"/docs/frameworks/springboot-integration/introduction"},{"type":"link","label":"GraalVM","href":"/docs/frameworks/graalvm","docId":"frameworks/graalvm","unlisted":false},{"type":"link","label":"Kubernetes deployment","href":"/docs/frameworks/kubernetes","docId":"frameworks/kubernetes","unlisted":false},{"type":"html","value":"<hr class=\\"sidebar-divider\\" />"},{"type":"html","value":"<div class=\\"sidebar-contents-header\\">Testing</div>"},{"type":"link","label":"Testing Flamingock","href":"/docs/testing/introduction","docId":"testing/introduction","unlisted":false},{"type":"link","label":"Unit Testing","href":"/docs/testing/unit-testing","docId":"testing/unit-testing","unlisted":false},{"type":"link","label":"Integration Testing","href":"/docs/testing/integration-testing","docId":"testing/integration-testing","unlisted":false},{"type":"link","label":"Spring Boot  Testing","href":"/docs/testing/springboot-integration-testing","docId":"testing/springboot-integration-testing","unlisted":false},{"type":"html","value":"<hr class=\\"sidebar-divider\\" />"},{"type":"html","value":"<div class=\\"sidebar-contents-header\\">Command Line Interface</div>"},{"type":"link","label":"Flamingock CLI","href":"/docs/cli/","docId":"cli/cli","unlisted":false},{"type":"html","value":"<hr class=\\"sidebar-divider\\" />"},{"type":"html","value":"<div class=\\"sidebar-contents-header\\">Resources</div>"},{"type":"link","label":"Examples","href":"/docs/resources/examples","docId":"resources/examples","unlisted":false},{"type":"link","label":"FAQ","href":"/docs/resources/faq","docId":"resources/faq","unlisted":false},{"type":"link","label":"Upgrade from Mongock","href":"/docs/resources/upgrade-from-mongock","docId":"resources/upgrade-from-mongock","unlisted":false}]},"docs":{"audit-stores/community/couchbase-audit-store":{"id":"audit-stores/community/couchbase-audit-store","title":"Couchbase","description":"This page explains how to configure Couchbase as Flamingock\'s audit store in the Community Edition.","sidebar":"tutorialSidebar"},"audit-stores/community/dynamodb-audit-store":{"id":"audit-stores/community/dynamodb-audit-store","title":"DynamoDB","description":"This page explains how to configure Amazon DynamoDB as Flamingock\'s audit store in the Community Edition.","sidebar":"tutorialSidebar"},"audit-stores/community/mongodb-audit-store":{"id":"audit-stores/community/mongodb-audit-store","title":"MongoDB","description":"This page explains how to configure MongoDB as Flamingock\u2019s audit store in the Community Edition.","sidebar":"tutorialSidebar"},"audit-stores/community/mongodb-springdata-audit-store":{"id":"audit-stores/community/mongodb-springdata-audit-store","title":"MongoDB Spring Data","description":"This page explains how to configure MongoDB with Spring Data as Flamingock\'s audit store in the Community Edition.","sidebar":"tutorialSidebar"},"audit-stores/introduction":{"id":"audit-stores/introduction","title":"Introduction","description":"The audit store is Flamingock\'s dedicated system for tracking execution history, preventing duplicate executions, and ensuring safe system evolution.","sidebar":"tutorialSidebar"},"change-units/anatomy-and-structure":{"id":"change-units/anatomy-and-structure","title":"Anatomy & Structure","description":"Every ChangeUnit follows a consistent structure with required properties, optional configurations, and specific annotations. Understanding this anatomy is essential for creating reliable changes.","sidebar":"tutorialSidebar"},"change-units/best-practices":{"id":"change-units/best-practices","title":"Best Practices","description":"Following these proven patterns will help you create reliable, maintainable ChangeUnits that work safely in production environments.","sidebar":"tutorialSidebar"},"change-units/introduction":{"id":"change-units/introduction","title":"Introduction","description":"A ChangeUnit is the atomic, versioned, self-contained unit of change in Flamingock. It encapsulates logic to evolve target systems safely, deterministically, and with complete auditability.","sidebar":"tutorialSidebar"},"change-units/types-and-implementation":{"id":"change-units/types-and-implementation","title":"Types & Implementation","description":"Flamingock supports two approaches for implementing ChangeUnits: code-based and template-based. Each serves different use cases and provides the same safety guarantees.","sidebar":"tutorialSidebar"},"cli/cli":{"id":"cli/cli","title":"Flamingock CLI","description":"Enterprise-grade operational control for distributed system evolution","sidebar":"tutorialSidebar"},"cloud-edition/cloud-edition":{"id":"cloud-edition/cloud-edition","title":"Cloud edition (coming soon)","description":"The Cloud Edition is currently under development and not yet publicly available.","sidebar":"tutorialSidebar"},"flamingock-library-config/additional-configuration":{"id":"flamingock-library-config/additional-configuration","title":"Additional configuration","description":"This section includes additional settings for customizing defaults and adding contextual information to your Flamingock setup.","sidebar":"tutorialSidebar"},"flamingock-library-config/context-and-dependencies":{"id":"flamingock-library-config/context-and-dependencies","title":"Context and dependencies","description":"Flamingock provides a sophisticated dependency injection system that automatically resolves dependencies for ChangeUnits from multiple sources. Understanding this system is crucial for building maintainable and well-structured changes.","sidebar":"tutorialSidebar"},"flamingock-library-config/events":{"id":"flamingock-library-config/events","title":"Events","description":"This guide provides a comprehensive explanation of how Flamingock events function.","sidebar":"tutorialSidebar"},"flamingock-library-config/introduction":{"id":"flamingock-library-config/introduction","title":"Introduction","description":"Flamingock provides flexible configuration options to support a variety of environments and workflows \u2014 from local setups to cloud-native distributed systems.","sidebar":"tutorialSidebar"},"flamingock-library-config/lock":{"id":"flamingock-library-config/lock","title":"Lock","description":"Flamingock uses a distributed lock to ensure that changes are only applied once and only once, even when multiple instances of your application start simultaneously in a distributed system.","sidebar":"tutorialSidebar"},"flamingock-library-config/setup-and-stages":{"id":"flamingock-library-config/setup-and-stages","title":"Setup & Stages","description":"The Flamingock setup organizes and executes your changes using stages. By default, you\'ll use a single stage that groups all your changes and executes them sequentially.","sidebar":"tutorialSidebar"},"flamingock-library-config/transactions":{"id":"flamingock-library-config/transactions","title":"Transactions","description":"Flamingock provides intelligent transaction management that adapts to your target systems\' capabilities. Understanding when and how changes are executed transactionally is key to building reliable system evolution.","sidebar":"tutorialSidebar"},"frameworks/graalvm":{"id":"frameworks/graalvm","title":"GraalVM","description":"Flamingock provides first-class support for GraalVM native images, enabling your application to compile into fast, self-contained executables without sacrificing change tracking, rollback, or template support.","sidebar":"tutorialSidebar"},"frameworks/kubernetes":{"id":"frameworks/kubernetes","title":"Kubernetes deployment","description":"","sidebar":"tutorialSidebar"},"frameworks/springboot-integration/builder-based-setup":{"id":"frameworks/springboot-integration/builder-based-setup","title":"Builder-based (manual)","description":"Flamingock supports manual integration with Spring Boot using the same builder API shared with standalone setups.","sidebar":"tutorialSidebar"},"frameworks/springboot-integration/enable-flamingock-setup":{"id":"frameworks/springboot-integration/enable-flamingock-setup","title":"Automatic Setup","description":"Flamingock provides a convenient automatic integration with Spring Boot using the @Flamingock annotation. This setup is ideal when you want Flamingock to automatically detect and wire required components without writing explicit builder logic.","sidebar":"tutorialSidebar"},"frameworks/springboot-integration/introduction":{"id":"frameworks/springboot-integration/introduction","title":"Introduction","description":"Flamingock integrates seamlessly with Spring Boot, offering a powerful and flexible setup for managing your change units in Spring-based applications.","sidebar":"tutorialSidebar"},"frameworks/springboot-integration/profiles":{"id":"frameworks/springboot-integration/profiles","title":"Profiles","description":"Flamingock supports Spring Boot profiles out of the box. This allows you to conditionally run specific change units depending on which profile(s) are active in your application.","sidebar":"tutorialSidebar"},"getting-started/get-started":{"id":"getting-started/get-started","title":"Get started","description":"Let\'s walk through a simple scenario","sidebar":"tutorialSidebar"},"getting-started/how-it-works":{"id":"getting-started/how-it-works","title":"How it works?","description":"Flamingock provides a structured, auditable, and version-controlled approach to managing changes across your systems, services, and configurations \u2014 simplifying the release process and reducing the risk of failure.","sidebar":"tutorialSidebar"},"overview/audit-store-vs-target-system":{"id":"overview/audit-store-vs-target-system","title":"Target systems vs audit store","description":"Understanding Flamingock\'s dual-system design for enterprise safety","sidebar":"tutorialSidebar"},"overview/Change-as-Code":{"id":"overview/Change-as-Code","title":"Change-as-Code (CaC)","description":"Automate changes. Version changes. Control changes.","sidebar":"tutorialSidebar"},"overview/core-concepts":{"id":"overview/core-concepts","title":"Core concepts","description":"ChangeUnits","sidebar":"tutorialSidebar"},"overview/Editions":{"id":"overview/Editions","title":"Flamingock editions","description":"Progressive investment path for enterprise distributed system evolution","sidebar":"tutorialSidebar"},"overview/Introduction":{"id":"overview/Introduction","title":" ","description":"Flamingock logo","sidebar":"tutorialSidebar"},"overview/key-features":{"id":"overview/key-features","title":"Key features","description":"With Flamingock, you can take advantage of the following features:","sidebar":"tutorialSidebar"},"overview/technical-overview":{"id":"overview/technical-overview","title":"Flamingock Technical Overview","description":"Welcome to the Technical Overview of Flamingock \u2014 a flexible framework designed to help you manage and audit changes of any kind across your systems and services.","sidebar":"tutorialSidebar"},"recovery-and-safety/issue-resolution":{"id":"recovery-and-safety/issue-resolution","title":"Issue Resolution","description":"Enterprise operational workflows for handling failures"},"recovery-and-safety/recovery-strategies":{"id":"recovery-and-safety/recovery-strategies","title":"Recovery Strategies","description":"Intelligent failure handling for enterprise distributed systems"},"recovery-and-safety/safety-patterns":{"id":"recovery-and-safety/safety-patterns","title":"Safety Patterns","description":"Proven approaches for enterprise-grade distributed system evolution"},"resources/examples":{"id":"resources/examples","title":"Examples","description":"Introduction","sidebar":"tutorialSidebar"},"resources/faq":{"id":"resources/faq","title":"FAQ","description":"Introduction","sidebar":"tutorialSidebar"},"resources/upgrade-from-mongock":{"id":"resources/upgrade-from-mongock","title":"Upgrade from Mongock","description":"Flamingock is the next evolution of Mongock. Upgrading from Mongock to Flamingock involves two main pillars:","sidebar":"tutorialSidebar"},"target-systems/couchbase-target-system":{"id":"target-systems/couchbase-target-system","title":"Couchbase","description":"The Couchbase target system (CouchbaseTargetSystem) enables Flamingock to apply changes to Couchbase databases using the official Couchbase Java SDK. As a transactional target system, it supports automatic rollback through Couchbase\'s transaction capabilities.","sidebar":"tutorialSidebar"},"target-systems/default-target-system":{"id":"target-systems/default-target-system","title":"Default (Non-transactional)","description":"The Default target system (DefaultTargetSystem) is Flamingock\'s generic target system for any system that doesn\'t require specialized handling. It serves as the universal option when no dedicated target system implementation exists or is needed for your specific technology.","sidebar":"tutorialSidebar"},"target-systems/dynamodb-target-system":{"id":"target-systems/dynamodb-target-system","title":"DynamoDB","description":"The DynamoDB target system (DynamoDBTargetSystem) enables Flamingock to apply changes to Amazon DynamoDB using the AWS SDK for Java. As a transactional target system, it supports automatic rollback through DynamoDB\'s transaction capabilities with TransactWriteItems.","sidebar":"tutorialSidebar"},"target-systems/introduction":{"id":"target-systems/introduction","title":"Introduction","description":"Target systems are the real-world systems where your business changes are applied.","sidebar":"tutorialSidebar"},"target-systems/mongodb-springdata-target-system":{"id":"target-systems/mongodb-springdata-target-system","title":"MongoDB Spring Data","description":"The MongoDB Spring Data target system (MongoSpringDataTargetSystem) enables Flamingock to apply changes to MongoDB databases using Spring Data MongoDB. As a transactional target system, it integrates seamlessly with Spring\'s transaction management and supports automatic rollback through MongoDB\'s native transaction capabilities.","sidebar":"tutorialSidebar"},"target-systems/mongodb-target-system":{"id":"target-systems/mongodb-target-system","title":"MongoDB Sync","description":"The MongoDB Sync target system (MongoSyncTargetSystem) enables Flamingock to apply changes to MongoDB databases using the official MongoDB Java sync driver. As a transactional target system, it supports automatic rollback through MongoDB\'s native transaction capabilities.","sidebar":"tutorialSidebar"},"target-systems/sql-target-system":{"id":"target-systems/sql-target-system","title":"SQL","description":"The SQL target system (SqlTargetSystem) enables Flamingock to apply changes to relational databases including PostgreSQL, MySQL, Oracle, and SQL Server using standard JDBC connections. As a transactional target system, it supports automatic rollback through the database\'s native transaction capabilities.","sidebar":"tutorialSidebar"},"templates/create-your-own-template":{"id":"templates/create-your-own-template","title":"Create your template","description":"Introduction","sidebar":"tutorialSidebar"},"templates/template-mapping-section":{"id":"templates/template-mapping-section","title":"Template mapping","description":"How Execution and Rollback Mapping Works","sidebar":"tutorialSidebar"},"templates/templates-how-to-use":{"id":"templates/templates-how-to-use","title":"How to use Templates","description":"Using a Flamingock Template is straightforward. Here\u2019s an example of how you can apply an SQL-based migration using the SQL Template.","sidebar":"tutorialSidebar"},"templates/templates-introduction":{"id":"templates/templates-introduction","title":"Introduction","description":"Introduction","sidebar":"tutorialSidebar"},"testing/integration-testing":{"id":"testing/integration-testing","title":"Integration Testing","description":"Introduction","sidebar":"tutorialSidebar"},"testing/introduction":{"id":"testing/introduction","title":"Testing Flamingock","description":"Introduction","sidebar":"tutorialSidebar"},"testing/springboot-integration-testing":{"id":"testing/springboot-integration-testing","title":"Spring Boot  Testing","description":"Introduction","sidebar":"tutorialSidebar"},"testing/unit-testing":{"id":"testing/unit-testing","title":"Unit Testing","description":"Introduction","sidebar":"tutorialSidebar"}}}}')}}]);