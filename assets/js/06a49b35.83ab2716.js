"use strict";(self.webpackChunkflamingock=self.webpackChunkflamingock||[]).push([[3647],{1470:(e,n,t)=>{t.d(n,{A:()=>C});var s=t(6540),r=t(4164),a=t(3104),i=t(6347),o=t(205),c=t(7485),l=t(1682),d=t(679);function h(e){return s.Children.toArray(e).filter(e=>"\n"!==e).map(e=>{if(!e||(0,s.isValidElement)(e)&&function(e){const{props:n}=e;return!!n&&"object"==typeof n&&"value"in n}(e))return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)})?.filter(Boolean)??[]}function u(e){const{values:n,children:t}=e;return(0,s.useMemo)(()=>{const e=n??function(e){return h(e).map(({props:{value:e,label:n,attributes:t,default:s}})=>({value:e,label:n,attributes:t,default:s}))}(t);return function(e){const n=(0,l.XI)(e,(e,n)=>e.value===n.value);if(n.length>0)throw new Error(`Docusaurus error: Duplicate values "${n.map(e=>e.value).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e},[n,t])}function g({value:e,tabValues:n}){return n.some(n=>n.value===e)}function x({queryString:e=!1,groupId:n}){const t=(0,i.W6)(),r=function({queryString:e=!1,groupId:n}){if("string"==typeof e)return e;if(!1===e)return null;if(!0===e&&!n)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return n??null}({queryString:e,groupId:n});return[(0,c.aZ)(r),(0,s.useCallback)(e=>{if(!r)return;const n=new URLSearchParams(t.location.search);n.set(r,e),t.replace({...t.location,search:n.toString()})},[r,t])]}function m(e){const{defaultValue:n,queryString:t=!1,groupId:r}=e,a=u(e),[i,c]=(0,s.useState)(()=>function({defaultValue:e,tabValues:n}){if(0===n.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(e){if(!g({value:e,tabValues:n}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${e}" but none of its children has the corresponding value. Available values are: ${n.map(e=>e.value).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return e}const t=n.find(e=>e.default)??n[0];if(!t)throw new Error("Unexpected error: 0 tabValues");return t.value}({defaultValue:n,tabValues:a})),[l,h]=x({queryString:t,groupId:r}),[m,p]=function({groupId:e}){const n=function(e){return e?`docusaurus.tab.${e}`:null}(e),[t,r]=(0,d.Dv)(n);return[t,(0,s.useCallback)(e=>{n&&r.set(e)},[n,r])]}({groupId:r}),j=(()=>{const e=l??m;return g({value:e,tabValues:a})?e:null})();(0,o.A)(()=>{j&&c(j)},[j]);return{selectedValue:i,selectValue:(0,s.useCallback)(e=>{if(!g({value:e,tabValues:a}))throw new Error(`Can't select invalid tab value=${e}`);c(e),h(e),p(e)},[h,p,a]),tabValues:a}}var p=t(2303);const j={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};var b=t(4848);function f({className:e,block:n,selectedValue:t,selectValue:s,tabValues:i}){const o=[],{blockElementScrollPositionUntilNextRender:c}=(0,a.a_)(),l=e=>{const n=e.currentTarget,r=o.indexOf(n),a=i[r].value;a!==t&&(c(n),s(a))},d=e=>{let n=null;switch(e.key){case"Enter":l(e);break;case"ArrowRight":{const t=o.indexOf(e.currentTarget)+1;n=o[t]??o[0];break}case"ArrowLeft":{const t=o.indexOf(e.currentTarget)-1;n=o[t]??o[o.length-1];break}}n?.focus()};return(0,b.jsx)("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,r.A)("tabs",{"tabs--block":n},e),children:i.map(({value:e,label:n,attributes:s})=>(0,b.jsx)("li",{role:"tab",tabIndex:t===e?0:-1,"aria-selected":t===e,ref:e=>{o.push(e)},onKeyDown:d,onClick:l,...s,className:(0,r.A)("tabs__item",j.tabItem,s?.className,{"tabs__item--active":t===e}),children:n??e},e))})}function y({lazy:e,children:n,selectedValue:t}){const a=(Array.isArray(n)?n:[n]).filter(Boolean);if(e){const e=a.find(e=>e.props.value===t);return e?(0,s.cloneElement)(e,{className:(0,r.A)("margin-top--md",e.props.className)}):null}return(0,b.jsx)("div",{className:"margin-top--md",children:a.map((e,n)=>(0,s.cloneElement)(e,{key:n,hidden:e.props.value!==t}))})}function v(e){const n=m(e);return(0,b.jsxs)("div",{className:(0,r.A)("tabs-container",j.tabList),children:[(0,b.jsx)(f,{...n,...e}),(0,b.jsx)(y,{...n,...e})]})}function C(e){const n=(0,p.A)();return(0,b.jsx)(v,{...e,children:h(e.children)},String(n))}},8453:(e,n,t)=>{t.d(n,{R:()=>i,x:()=>o});var s=t(6540);const r={},a=s.createContext(r);function i(e){const n=s.useContext(a);return s.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:i(e.components),s.createElement(a.Provider,{value:n},e.children)}},9250:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>d,contentTitle:()=>l,default:()=>g,frontMatter:()=>c,metadata:()=>s,toc:()=>h});const s=JSON.parse('{"id":"target-systems/mongodb-target-system","title":"MongoDB Sync","description":"The MongoDB Sync target system (MongoDBSyncTargetSystem) enables Flamingock to apply changes to MongoDB databases using the official MongoDB Java sync driver. As a transactional target system, it supports automatic rollback through MongoDB\'s native transaction capabilities.","source":"@site/docs/target-systems/mongodb-target-system.md","sourceDirName":"target-systems","slug":"/target-systems/mongodb-target-system","permalink":"/docs/target-systems/mongodb-target-system","draft":false,"unlisted":false,"editUrl":"https://github.com/flamingock/flamingock-java/docs/target-systems/mongodb-target-system.md","tags":[],"version":"current","sidebarPosition":3,"frontMatter":{"title":"MongoDB Sync","sidebar_position":3},"sidebar":"tutorialSidebar","previous":{"title":"SQL","permalink":"/docs/target-systems/sql-target-system"},"next":{"title":"MongoDB Spring Data","permalink":"/docs/target-systems/mongodb-springdata-target-system"}}');var r=t(4848),a=t(8453),i=t(1470),o=t(9365);const c={title:"MongoDB Sync",sidebar_position:3},l="MongoDB Sync Target System",d={},h=[{value:"Version Compatibility",id:"version-compatibility",level:2},{value:"Installation",id:"installation",level:2},{value:"Basic setup",id:"basic-setup",level:2},{value:"Target System Configuration",id:"target-system-configuration",level:2},{value:"Constructor Dependencies (Mandatory)",id:"constructor-dependencies-mandatory",level:3},{value:"Optional Configuration (.withXXX() methods)",id:"optional-configuration-withxxx-methods",level:3},{value:"Dependencies Available to Changes",id:"dependencies-available-to-changes",level:2},{value:"Configuration example",id:"configuration-example",level:2},{value:"Transactional support",id:"transactional-support",level:2},{value:"Available dependencies in Changes",id:"available-dependencies-in-changes",level:2},{value:"Next steps",id:"next-steps",level:2}];function u(e){const n={a:"a",admonition:"admonition",blockquote:"blockquote",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,a.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.header,{children:(0,r.jsx)(n.h1,{id:"mongodb-sync-target-system",children:"MongoDB Sync Target System"})}),"\n",(0,r.jsxs)(n.p,{children:["The MongoDB Sync target system (",(0,r.jsx)(n.code,{children:"MongoDBSyncTargetSystem"}),") enables Flamingock to apply changes to MongoDB databases using the official MongoDB Java sync driver. As a transactional target system, it supports automatic rollback through MongoDB's native transaction capabilities."]}),"\n",(0,r.jsx)(n.h2,{id:"version-compatibility",children:"Version Compatibility"}),"\n",(0,r.jsxs)(n.table,{children:[(0,r.jsx)(n.thead,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.th,{children:"Component"}),(0,r.jsx)(n.th,{children:"Version Requirement"})]})}),(0,r.jsx)(n.tbody,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"MongoDB Java Driver"}),(0,r.jsx)(n.td,{children:"4.0.0+"})]})})]}),"\n",(0,r.jsx)(n.p,{children:"MongoDB 4.0+ is required for transaction support."}),"\n",(0,r.jsx)(n.h2,{id:"installation",children:"Installation"}),"\n",(0,r.jsx)(n.p,{children:"Add the MongoDB Java sync driver dependency to your project (version 4.0.0+ required):"}),"\n",(0,r.jsxs)(i.A,{groupId:"gradle_maven",children:[(0,r.jsx)(o.A,{value:"gradle",label:"Gradle",default:!0,children:(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-kotlin",children:'implementation("org.mongodb:mongodb-driver-sync:4.0.0")\n'})})}),(0,r.jsx)(o.A,{value:"maven",label:"Maven",children:(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-xml",children:"<dependency>\n    <groupId>org.mongodb</groupId>\n    <artifactId>mongodb-driver-sync</artifactId>\n    <version>4.0.0</version> \x3c!-- 4.0.0+ supported --\x3e\n</dependency>\n"})})})]}),"\n",(0,r.jsx)(n.h2,{id:"basic-setup",children:"Basic setup"}),"\n",(0,r.jsx)(n.p,{children:"Configure the target system:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-java",children:'var mongoTarget = new MongoDBSyncTargetSystem("user-database-id", mongoClient, "userDb");\n'})}),"\n",(0,r.jsxs)(n.p,{children:["The constructor requires the target system name, MongoDB client, and database name. Optional configurations can be added via ",(0,r.jsx)(n.code,{children:".withXXX()"})," methods."]}),"\n",(0,r.jsx)(n.admonition,{title:"Register Target System",type:"info",children:(0,r.jsxs)(n.p,{children:["Once created, you need to register this target system with Flamingock. See ",(0,r.jsx)(n.a,{href:"/docs/target-systems/introduction#registering-target-systems",children:"Registering target systems"})," for details."]})}),"\n",(0,r.jsx)(n.h2,{id:"target-system-configuration",children:"Target System Configuration"}),"\n",(0,r.jsxs)(n.p,{children:["The MongoDB target system uses Flamingock's ",(0,r.jsx)(n.a,{href:"/docs/target-systems/introduction#dependency-injection",children:"split dependency resolution architecture"})," with separate flows for target system configuration and change execution dependencies."]}),"\n",(0,r.jsx)(n.h3,{id:"constructor-dependencies-mandatory",children:"Constructor Dependencies (Mandatory)"}),"\n",(0,r.jsxs)(n.p,{children:["These dependencies must be provided at target system creation time with ",(0,r.jsx)(n.strong,{children:"no global context fallback"}),":"]}),"\n",(0,r.jsxs)(n.table,{children:[(0,r.jsx)(n.thead,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.th,{children:"Dependency"}),(0,r.jsx)(n.th,{children:"Constructor Parameter"}),(0,r.jsx)(n.th,{children:"Description"})]})}),(0,r.jsxs)(n.tbody,{children:[(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"MongoClient"})}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"mongoClient"})}),(0,r.jsxs)(n.td,{children:["MongoDB connection client - ",(0,r.jsx)(n.strong,{children:"required"})," for both target system configuration and change execution"]})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"String"})}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"databaseName"})}),(0,r.jsxs)(n.td,{children:["Target database name - ",(0,r.jsx)(n.strong,{children:"required"})," to identify which database changes will affect"]})]})]})]}),"\n",(0,r.jsx)(n.h3,{id:"optional-configuration-withxxx-methods",children:"Optional Configuration (.withXXX() methods)"}),"\n",(0,r.jsxs)(n.p,{children:["These configurations can be customized via ",(0,r.jsx)(n.code,{children:".withXXX()"})," methods with ",(0,r.jsx)(n.strong,{children:"no global context fallback"}),":"]}),"\n",(0,r.jsxs)(n.table,{children:[(0,r.jsx)(n.thead,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.th,{children:"Configuration"}),(0,r.jsx)(n.th,{children:"Method"}),(0,r.jsx)(n.th,{children:"Default"}),(0,r.jsx)(n.th,{children:"Description"})]})}),(0,r.jsxs)(n.tbody,{children:[(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"WriteConcern"})}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:".withWriteConcern(concern)"})}),(0,r.jsxs)(n.td,{children:[(0,r.jsx)(n.code,{children:"MAJORITY"})," with journal"]}),(0,r.jsx)(n.td,{children:"Write acknowledgment level"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"ReadConcern"})}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:".withReadConcern(concern)"})}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"MAJORITY"})}),(0,r.jsx)(n.td,{children:"Read isolation level"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"ReadPreference"})}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:".withReadPreference(pref)"})}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"PRIMARY"})}),(0,r.jsx)(n.td,{children:"Server selection for reads"})]})]})]}),"\n",(0,r.jsx)(n.h2,{id:"dependencies-available-to-changes",children:"Dependencies Available to Changes"}),"\n",(0,r.jsxs)(n.p,{children:["Changes can access dependencies through ",(0,r.jsx)(n.a,{href:"/docs/changes/anatomy-and-structure#method-parameters-and-dependency-injection",children:"dependency injection with fallback"}),":"]}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Target system context"})," (highest priority) - ",(0,r.jsx)(n.code,{children:"MongoClient"}),", ",(0,r.jsx)(n.code,{children:"MongoDatabase"}),", ",(0,r.jsx)(n.code,{children:"ClientSession"}),", plus any added via ",(0,r.jsx)(n.code,{children:".addDependency()"})]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Target system additional dependencies"})," - added via ",(0,r.jsx)(n.code,{children:".addDependency()"})," or ",(0,r.jsx)(n.code,{children:".setProperty()"})]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Global context"})," (fallback) - shared dependencies available to all target systems"]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"configuration-example",children:"Configuration example"}),"\n",(0,r.jsx)(n.p,{children:"Here's a comprehensive example showing the new architecture:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-java",children:'// Target system configuration (mandatory via constructor)\nvar mongoTarget = new MongoDBSyncTargetSystem("user-database", productionMongoClient, "userDb")\n    .withWriteConcern(WriteConcern.W1)         // Optional configuration\n    .withReadPreference(ReadPreference.secondary())  // Optional configuration\n    .addDependency(auditService);              // Additional dependency for changes\n\n// Global context with shared dependencies\nFlamingock.builder()\n    .addDependency(emailService)               // Available to all target systems\n    .addDependency(logService)                 // Available to all target systems\n    .addTargetSystems(mongoTarget)\n    .build();\n'})}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Target system configuration resolution:"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"MongoClient"}),": Must be provided via constructor (",(0,r.jsx)(n.code,{children:"productionMongoClient"}),")"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Database name"}),": Must be provided via constructor (",(0,r.jsx)(n.code,{children:'"userDb"'}),")"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"WriteConcern"}),": Uses explicit configuration (",(0,r.jsx)(n.code,{children:"W1"}),") instead of default"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"ReadPreference"}),": Uses explicit configuration (",(0,r.jsx)(n.code,{children:"secondary()"}),") instead of default"]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:'Change dependency resolution for Changes in "user-database":'})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"MongoClient"}),": From target system context (",(0,r.jsx)(n.code,{children:"productionMongoClient"}),")"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"MongoDatabase"}),": From target system context (derived from ",(0,r.jsx)(n.code,{children:"productionMongoClient"})," + ",(0,r.jsx)(n.code,{children:'"userDb"'}),")"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"ClientSession"}),": From target system context (created by Flamingock)"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"AuditService"}),": From target system additional dependencies"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"EmailService"}),": From global context (fallback)"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"LogService"}),": From global context (fallback)"]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"This architecture ensures explicit target system configuration while providing flexible dependency access for changes."}),"\n",(0,r.jsx)(n.h2,{id:"transactional-support",children:"Transactional support"}),"\n",(0,r.jsxs)(n.p,{children:["For a Change to leverage MongoDB's transactional capabilities, it must use the ",(0,r.jsx)(n.code,{children:"ClientSession"})," parameter. Flamingock uses the injected ",(0,r.jsx)(n.code,{children:"MongoClient"})," and ",(0,r.jsx)(n.code,{children:"MongoDatabase"})," dependencies to create and manage this session's lifecycle - starting the transaction before execution, committing on success, and rolling back on failure."]}),"\n",(0,r.jsxs)(n.blockquote,{children:["\n",(0,r.jsxs)(n.p,{children:["For detailed information on transaction handling, see ",(0,r.jsx)(n.a,{href:"/docs/changes/transactions",children:"Transactions"}),"."]}),"\n"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-java",children:'@TargetSystem("user-database-id")\n@Change(id = "create-users", order = "001")\npublic class CreateUsers {\n    \n    @Apply\n    public void apply(MongoDatabase db, ClientSession session) {\n        // The ClientSession is required for transactional execution\n        // Flamingock uses the target system\'s MongoClient to create this session\n        // and handles transaction start, commit, and rollback automatically\n        db.getCollection("users")\n          .insertOne(session, new Document("name", "John"));\n    }\n}\n'})}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"How transactions work:"})}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Session creation"}),": Flamingock uses the target system's ",(0,r.jsx)(n.code,{children:"MongoClient"})," to create a ",(0,r.jsx)(n.code,{children:"ClientSession"})]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Transaction management"}),": The same ",(0,r.jsx)(n.code,{children:"MongoClient"})," and ",(0,r.jsx)(n.code,{children:"MongoDatabase"})," handle transaction operations"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Lifecycle"}),": Flamingock automatically starts the transaction, commits on success, or rolls back on failure"]}),"\n"]}),"\n",(0,r.jsxs)(n.p,{children:["Without the ",(0,r.jsx)(n.code,{children:"ClientSession"})," parameter, operations will execute but won't participate in transactions."]}),"\n",(0,r.jsx)(n.h2,{id:"available-dependencies-in-changes",children:"Available dependencies in Changes"}),"\n",(0,r.jsxs)(n.p,{children:["Your Changes can inject MongoDB-specific dependencies like ",(0,r.jsx)(n.code,{children:"MongoClient"}),", ",(0,r.jsx)(n.code,{children:"MongoDatabase"}),", and ",(0,r.jsx)(n.code,{children:"ClientSession"})," (for transactions), but are not limited to these. The target system provides these dependencies through its context, and you can add additional dependencies via ",(0,r.jsx)(n.code,{children:".addDependency()"})," that take precedence over global dependencies."]}),"\n",(0,r.jsxs)(n.p,{children:["For comprehensive details on change dependency resolution, see ",(0,r.jsx)(n.a,{href:"/docs/changes/anatomy-and-structure",children:"Change Anatomy & Structure"}),"."]}),"\n",(0,r.jsx)(n.h2,{id:"next-steps",children:"Next steps"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Learn about ",(0,r.jsx)(n.a,{href:"/docs/target-systems/introduction",children:"Target systems"})]}),"\n",(0,r.jsxs)(n.li,{children:["Explore ",(0,r.jsx)(n.a,{href:"/docs/changes/introduction",children:"Changes"})]}),"\n",(0,r.jsxs)(n.li,{children:["See ",(0,r.jsx)(n.a,{href:"https://github.com/flamingock/flamingock-examples/tree/master/mongodb",children:"MongoDB examples"})]}),"\n"]})]})}function g(e={}){const{wrapper:n}={...(0,a.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(u,{...e})}):u(e)}},9365:(e,n,t)=>{t.d(n,{A:()=>i});t(6540);var s=t(4164);const r={tabItem:"tabItem_Ymn6"};var a=t(4848);function i({children:e,hidden:n,className:t}){return(0,a.jsx)("div",{role:"tabpanel",className:(0,s.A)(r.tabItem,t),hidden:n,children:e})}}}]);