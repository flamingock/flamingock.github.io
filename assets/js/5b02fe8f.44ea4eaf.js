"use strict";(self.webpackChunkflamingock=self.webpackChunkflamingock||[]).push([[7033],{1470:(e,n,t)=>{t.d(n,{A:()=>D});var a=t(6540),s=t(4164),r=t(3104),i=t(6347),o=t(205),l=t(7485),c=t(1682),d=t(679);function u(e){return a.Children.toArray(e).filter(e=>"\n"!==e).map(e=>{if(!e||(0,a.isValidElement)(e)&&function(e){const{props:n}=e;return!!n&&"object"==typeof n&&"value"in n}(e))return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)})?.filter(Boolean)??[]}function h(e){const{values:n,children:t}=e;return(0,a.useMemo)(()=>{const e=n??function(e){return u(e).map(({props:{value:e,label:n,attributes:t,default:a}})=>({value:e,label:n,attributes:t,default:a}))}(t);return function(e){const n=(0,c.XI)(e,(e,n)=>e.value===n.value);if(n.length>0)throw new Error(`Docusaurus error: Duplicate values "${n.map(e=>e.value).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e},[n,t])}function m({value:e,tabValues:n}){return n.some(n=>n.value===e)}function p({queryString:e=!1,groupId:n}){const t=(0,i.W6)(),s=function({queryString:e=!1,groupId:n}){if("string"==typeof e)return e;if(!1===e)return null;if(!0===e&&!n)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return n??null}({queryString:e,groupId:n});return[(0,l.aZ)(s),(0,a.useCallback)(e=>{if(!s)return;const n=new URLSearchParams(t.location.search);n.set(s,e),t.replace({...t.location,search:n.toString()})},[s,t])]}function g(e){const{defaultValue:n,queryString:t=!1,groupId:s}=e,r=h(e),[i,l]=(0,a.useState)(()=>function({defaultValue:e,tabValues:n}){if(0===n.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(e){if(!m({value:e,tabValues:n}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${e}" but none of its children has the corresponding value. Available values are: ${n.map(e=>e.value).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return e}const t=n.find(e=>e.default)??n[0];if(!t)throw new Error("Unexpected error: 0 tabValues");return t.value}({defaultValue:n,tabValues:r})),[c,u]=p({queryString:t,groupId:s}),[g,y]=function({groupId:e}){const n=function(e){return e?`docusaurus.tab.${e}`:null}(e),[t,s]=(0,d.Dv)(n);return[t,(0,a.useCallback)(e=>{n&&s.set(e)},[n,s])]}({groupId:s}),x=(()=>{const e=c??g;return m({value:e,tabValues:r})?e:null})();(0,o.A)(()=>{x&&l(x)},[x]);return{selectedValue:i,selectValue:(0,a.useCallback)(e=>{if(!m({value:e,tabValues:r}))throw new Error(`Can't select invalid tab value=${e}`);l(e),u(e),y(e)},[u,y,r]),tabValues:r}}var y=t(2303);const x={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};var b=t(4848);function j({className:e,block:n,selectedValue:t,selectValue:a,tabValues:i}){const o=[],{blockElementScrollPositionUntilNextRender:l}=(0,r.a_)(),c=e=>{const n=e.currentTarget,s=o.indexOf(n),r=i[s].value;r!==t&&(l(n),a(r))},d=e=>{let n=null;switch(e.key){case"Enter":c(e);break;case"ArrowRight":{const t=o.indexOf(e.currentTarget)+1;n=o[t]??o[0];break}case"ArrowLeft":{const t=o.indexOf(e.currentTarget)-1;n=o[t]??o[o.length-1];break}}n?.focus()};return(0,b.jsx)("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,s.A)("tabs",{"tabs--block":n},e),children:i.map(({value:e,label:n,attributes:a})=>(0,b.jsx)("li",{role:"tab",tabIndex:t===e?0:-1,"aria-selected":t===e,ref:e=>{o.push(e)},onKeyDown:d,onClick:c,...a,className:(0,s.A)("tabs__item",x.tabItem,a?.className,{"tabs__item--active":t===e}),children:n??e},e))})}function f({lazy:e,children:n,selectedValue:t}){const r=(Array.isArray(n)?n:[n]).filter(Boolean);if(e){const e=r.find(e=>e.props.value===t);return e?(0,a.cloneElement)(e,{className:(0,s.A)("margin-top--md",e.props.className)}):null}return(0,b.jsx)("div",{className:"margin-top--md",children:r.map((e,n)=>(0,a.cloneElement)(e,{key:n,hidden:e.props.value!==t}))})}function v(e){const n=g(e);return(0,b.jsxs)("div",{className:(0,s.A)("tabs-container",x.tabList),children:[(0,b.jsx)(j,{...n,...e}),(0,b.jsx)(f,{...n,...e})]})}function D(e){const n=(0,y.A)();return(0,b.jsx)(v,{...e,children:u(e.children)},String(n))}},7418:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>d,contentTitle:()=>c,default:()=>m,frontMatter:()=>l,metadata:()=>a,toc:()=>u});const a=JSON.parse('{"id":"target-systems/dynamodb-target-system","title":"DynamoDB","description":"The DynamoDB target system (DynamoDBTargetSystem) enables Flamingock to apply changes to Amazon DynamoDB using the AWS SDK for Java. As a transactional target system, it supports automatic rollback through DynamoDB\'s transaction capabilities with TransactWriteItems.","source":"@site/docs/target-systems/dynamodb-target-system.md","sourceDirName":"target-systems","slug":"/target-systems/dynamodb-target-system","permalink":"/docs/target-systems/dynamodb-target-system","draft":false,"unlisted":false,"editUrl":"https://github.com/flamingock/flamingock-java/docs/target-systems/dynamodb-target-system.md","tags":[],"version":"current","sidebarPosition":5,"frontMatter":{"title":"DynamoDB","sidebar_position":5},"sidebar":"tutorialSidebar","previous":{"title":"MongoDB Spring Data","permalink":"/docs/target-systems/mongodb-springdata-target-system"},"next":{"title":"Couchbase","permalink":"/docs/target-systems/couchbase-target-system"}}');var s=t(4848),r=t(8453),i=t(1470),o=t(9365);const l={title:"DynamoDB",sidebar_position:5},c="DynamoDB Target System",d={},u=[{value:"Version Compatibility",id:"version-compatibility",level:2},{value:"Installation",id:"installation",level:2},{value:"Basic setup",id:"basic-setup",level:2},{value:"Target System Configuration",id:"target-system-configuration",level:2},{value:"Constructor Dependencies (Mandatory)",id:"constructor-dependencies-mandatory",level:3},{value:"Dependencies Available to Changes",id:"dependencies-available-to-changes",level:2},{value:"Configuration example",id:"configuration-example",level:2},{value:"Transactional support",id:"transactional-support",level:2},{value:"Available dependencies in Changes",id:"available-dependencies-in-changes",level:2},{value:"Next steps",id:"next-steps",level:2}];function h(e){const n={a:"a",admonition:"admonition",blockquote:"blockquote",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,r.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.header,{children:(0,s.jsx)(n.h1,{id:"dynamodb-target-system",children:"DynamoDB Target System"})}),"\n",(0,s.jsxs)(n.p,{children:["The DynamoDB target system (",(0,s.jsx)(n.code,{children:"DynamoDBTargetSystem"}),") enables Flamingock to apply changes to Amazon DynamoDB using the AWS SDK for Java. As a transactional target system, it supports automatic rollback through DynamoDB's transaction capabilities with ",(0,s.jsx)(n.code,{children:"TransactWriteItems"}),"."]}),"\n",(0,s.jsx)(n.h2,{id:"version-compatibility",children:"Version Compatibility"}),"\n",(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{children:"Component"}),(0,s.jsx)(n.th,{children:"Version Requirement"})]})}),(0,s.jsx)(n.tbody,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"AWS SDK DynamoDB Enhanced"}),(0,s.jsx)(n.td,{children:"2.25.0+"})]})})]}),"\n",(0,s.jsx)(n.p,{children:"AWS SDK DynamoDB Enhanced 2.25.0+ is required and must be included in your project dependencies."}),"\n",(0,s.jsx)(n.h2,{id:"installation",children:"Installation"}),"\n",(0,s.jsx)(n.p,{children:"Add the AWS SDK DynamoDB Enhanced dependency to your project (version 2.25.0+ required):"}),"\n",(0,s.jsxs)(i.A,{groupId:"gradle_maven",children:[(0,s.jsx)(o.A,{value:"gradle",label:"Gradle",default:!0,children:(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-kotlin",children:'implementation("software.amazon.awssdk:dynamodb-enhanced:2.25.0")\n'})})}),(0,s.jsx)(o.A,{value:"maven",label:"Maven",children:(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-xml",children:"<dependency>\n    <groupId>software.amazon.awssdk</groupId>\n    <artifactId>dynamodb-enhanced</artifactId>\n    <version>2.25.0</version> \x3c!-- 2.25.0+ supported --\x3e\n</dependency>\n"})})})]}),"\n",(0,s.jsx)(n.h2,{id:"basic-setup",children:"Basic setup"}),"\n",(0,s.jsx)(n.p,{children:"Configure the target system:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-java",children:'var dynamoTarget = new DynamoDBTargetSystem("inventory-database-id", dynamoDbClient);\n'})}),"\n",(0,s.jsxs)(n.p,{children:["The constructor requires the target system name and DynamoDB client. Optional configurations can be added via ",(0,s.jsx)(n.code,{children:".withXXX()"})," methods."]}),"\n",(0,s.jsx)(n.admonition,{title:"Register Target System",type:"info",children:(0,s.jsxs)(n.p,{children:["Once created, you need to register this target system with Flamingock. See ",(0,s.jsx)(n.a,{href:"/docs/target-systems/introduction#registering-target-systems",children:"Registering target systems"})," for details."]})}),"\n",(0,s.jsx)(n.h2,{id:"target-system-configuration",children:"Target System Configuration"}),"\n",(0,s.jsxs)(n.p,{children:["The DynamoDB target system uses Flamingock's ",(0,s.jsx)(n.a,{href:"/docs/target-systems/introduction#dependency-injection",children:"split dependency resolution architecture"})," with separate flows for target system configuration and change execution dependencies."]}),"\n",(0,s.jsx)(n.h3,{id:"constructor-dependencies-mandatory",children:"Constructor Dependencies (Mandatory)"}),"\n",(0,s.jsxs)(n.p,{children:["These dependencies must be provided at target system creation time with ",(0,s.jsx)(n.strong,{children:"no global context fallback"}),":"]}),"\n",(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{children:"Dependency"}),(0,s.jsx)(n.th,{children:"Constructor Parameter"}),(0,s.jsx)(n.th,{children:"Description"})]})}),(0,s.jsx)(n.tbody,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"DynamoDbClient"})}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"dynamoDbClient"})}),(0,s.jsxs)(n.td,{children:["AWS DynamoDB client - ",(0,s.jsx)(n.strong,{children:"required"})," for both target system configuration and change execution"]})]})})]}),"\n",(0,s.jsx)(n.h2,{id:"dependencies-available-to-changes",children:"Dependencies Available to Changes"}),"\n",(0,s.jsxs)(n.p,{children:["Changes can access dependencies through ",(0,s.jsx)(n.a,{href:"/docs/changes/anatomy-and-structure#method-parameters-and-dependency-injection",children:"dependency injection with fallback"}),":"]}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Target system context"})," (highest priority) - ",(0,s.jsx)(n.code,{children:"DynamoDbClient"}),", ",(0,s.jsx)(n.code,{children:"TransactWriteItemsEnhancedRequest.Builder"}),", plus any added via ",(0,s.jsx)(n.code,{children:".addDependency()"})]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Target system additional dependencies"})," - added via ",(0,s.jsx)(n.code,{children:".addDependency()"})," or ",(0,s.jsx)(n.code,{children:".setProperty()"})]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Global context"})," (fallback) - shared dependencies available to all target systems"]}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"configuration-example",children:"Configuration example"}),"\n",(0,s.jsx)(n.p,{children:"Here's a comprehensive example showing the new architecture:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-java",children:'// Target system configuration (mandatory via constructor)\nvar dynamoTarget = new DynamoDBTargetSystem("inventory-database", inventoryDynamoClient)\n    .addDependency(inventoryService);           // Additional dependency for changes\n\n// Global context with shared dependencies\nFlamingock.builder()\n    .addDependency(emailService)                // Available to all target systems\n    .addDependency(logService)                  // Available to all target systems\n    .addTargetSystems(dynamoTarget)\n    .build();\n'})}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Target system configuration resolution:"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"DynamoDbClient"}),": Must be provided via constructor (",(0,s.jsx)(n.code,{children:"inventoryDynamoClient"}),")"]}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:'Change dependency resolution for Changes in "inventory-database":'})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"DynamoDbClient"}),": From target system context (",(0,s.jsx)(n.code,{children:"inventoryDynamoClient"}),")"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"TransactWriteItemsEnhancedRequest.Builder"}),": From target system context (created by Flamingock)"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"InventoryService"}),": From target system additional dependencies"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"EmailService"}),": From global context (fallback)"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"LogService"}),": From global context (fallback)"]}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"This architecture ensures explicit target system configuration while providing flexible dependency access for changes."}),"\n",(0,s.jsx)(n.h2,{id:"transactional-support",children:"Transactional support"}),"\n",(0,s.jsxs)(n.p,{children:["For a Change to leverage DynamoDB's transactional capabilities, it must use the ",(0,s.jsx)(n.code,{children:"TransactWriteItemsEnhancedRequest.Builder"})," parameter. Flamingock uses the injected ",(0,s.jsx)(n.code,{children:"DynamoDbClient"})," dependency to create and manage this builder's lifecycle - creating it before execution and executing the transaction with all operations on success."]}),"\n",(0,s.jsxs)(n.blockquote,{children:["\n",(0,s.jsxs)(n.p,{children:["For detailed information on transaction handling, see ",(0,s.jsx)(n.a,{href:"/docs/changes/transactions",children:"Transactions"}),"."]}),"\n"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-java",children:'@TargetSystem("inventory-database-id")\n@Change(id = "update-inventory", order = "001")\npublic class UpdateInventory {\n    \n    @Apply\n    public void apply(DynamoDbClient client,\n                         TransactWriteItemsEnhancedRequest.Builder txBuilder) {\n        // The transaction builder is required for transactional execution\n        // Flamingock uses the target system\'s DynamoDbClient to handle transaction operations\n        // and manages transaction creation, execution, and rollback automatically\n        \n        DynamoDbEnhancedClient enhancedClient = DynamoDbEnhancedClient.builder()\n            .dynamoDbClient(client)\n            .build();\n        \n        DynamoDbTable<Product> table = enhancedClient.table("products", \n            TableSchema.fromBean(Product.class));\n        \n        // Add operations to the transaction\n        txBuilder.addPutItem(table, new Product("123", "Updated Product"));\n        txBuilder.addDeleteItem(table, Key.builder().partitionValue("456").build());\n    }\n}\n'})}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"How transactions work:"})}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Builder creation"}),": Flamingock uses the target system's ",(0,s.jsx)(n.code,{children:"DynamoDbClient"})," to create a ",(0,s.jsx)(n.code,{children:"TransactWriteItemsEnhancedRequest.Builder"})]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Transaction management"}),": The same ",(0,s.jsx)(n.code,{children:"DynamoDbClient"})," executes the transaction with all accumulated operations"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Lifecycle"}),": Flamingock automatically creates the builder, executes the transaction on success, or handles rollback on failure"]}),"\n"]}),"\n",(0,s.jsxs)(n.p,{children:["Without the ",(0,s.jsx)(n.code,{children:"TransactWriteItemsEnhancedRequest.Builder"})," parameter, operations will execute but won't participate in transactions."]}),"\n",(0,s.jsx)(n.h2,{id:"available-dependencies-in-changes",children:"Available dependencies in Changes"}),"\n",(0,s.jsxs)(n.p,{children:["Your Changes can inject DynamoDB-specific dependencies like ",(0,s.jsx)(n.code,{children:"DynamoDbClient"})," and ",(0,s.jsx)(n.code,{children:"TransactWriteItemsEnhancedRequest.Builder"}),", but are not limited to these. The target system provides these dependencies through its context, and you can add additional dependencies via ",(0,s.jsx)(n.code,{children:".addDependency()"})," that take precedence over global dependencies."]}),"\n",(0,s.jsxs)(n.p,{children:["For comprehensive details on change dependency resolution, see ",(0,s.jsx)(n.a,{href:"/docs/changes/anatomy-and-structure",children:"Change Anatomy & Structure"}),"."]}),"\n",(0,s.jsx)(n.h2,{id:"next-steps",children:"Next steps"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["Learn about ",(0,s.jsx)(n.a,{href:"/docs/target-systems/introduction",children:"Target systems"})]}),"\n",(0,s.jsxs)(n.li,{children:["Explore ",(0,s.jsx)(n.a,{href:"/docs/changes/introduction",children:"Changes"})]}),"\n",(0,s.jsxs)(n.li,{children:["See ",(0,s.jsx)(n.a,{href:"https://github.com/flamingock/flamingock-examples/tree/master/dynamodb",children:"DynamoDB examples"})]}),"\n"]})]})}function m(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(h,{...e})}):h(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>i,x:()=>o});var a=t(6540);const s={},r=a.createContext(s);function i(e){const n=a.useContext(r);return a.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:i(e.components),a.createElement(r.Provider,{value:n},e.children)}},9365:(e,n,t)=>{t.d(n,{A:()=>i});t(6540);var a=t(4164);const s={tabItem:"tabItem_Ymn6"};var r=t(4848);function i({children:e,hidden:n,className:t}){return(0,r.jsx)("div",{role:"tabpanel",className:(0,a.A)(s.tabItem,t),hidden:n,children:e})}}}]);